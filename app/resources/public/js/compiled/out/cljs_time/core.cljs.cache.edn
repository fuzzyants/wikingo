;; Analyzed by ClojureScript 0.0-3211
{:use-macros nil, :excludes #{= second extend}, :name cljs-time.core, :imports nil, :requires {goog.i18n.TimeZone goog.i18n.TimeZone, goog.date.UtcDateTime goog.date.UtcDateTime, goog.date.DateTime goog.date.DateTime, goog.date.Date goog.date.Date, string clojure.string, clojure.string clojure.string, cljs-time.internal.core cljs-time.internal.core, internal cljs-time.internal.core}, :uses {leap-year? cljs-time.internal.core, format cljs-time.internal.core}, :defs {interval {:protocol-inline nil, :meta {:arglists (quote ([start end])), :doc "Returns an Interval representing the span between the two given DateTime.\n  Note that intervals are closed on the left and open on the right.", :end-column 15, :end-line 117, :column 7, :line 117, :file "/Users/fabian/Code/go/src/github.com/fuzzyants/wikingo/app/resources/public/js/compiled/out/cljs_time/core.cljs"}, :name cljs-time.core/interval, :variadic false, :file "resources/public/js/compiled/out/cljs_time/core.cljs", :end-column 15, :method-params ([start end]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 117, :end-line 117, :max-fixed-arity 2, :fn-var true, :arglists (quote ([start end])), :doc "Returns an Interval representing the span between the two given DateTime.\n  Note that intervals are closed on the left and open on the right.", :test true}, default-ms-fn {:protocol-inline nil, :meta {:arglists (quote ([])), :end-column 20, :end-line 246, :column 7, :line 246, :file "/Users/fabian/Code/go/src/github.com/fuzzyants/wikingo/app/resources/public/js/compiled/out/cljs_time/core.cljs"}, :name cljs-time.core/default-ms-fn, :variadic false, :file "resources/public/js/compiled/out/cljs_time/core.cljs", :end-column 20, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 246, :end-line 246, :max-fixed-arity 0, :fn-var true, :arglists (quote ([])), :test true}, in-months {:protocol-inline nil, :meta {:arglists (quote ([this])), :doc "Return the time in months", :protocol cljs-time.core/InTimeUnitProtocol, :end-column 13, :end-line 112, :column 4, :line 112, :file "/Users/fabian/Code/go/src/github.com/fuzzyants/wikingo/app/resources/public/js/compiled/out/cljs_time/core.cljs"}, :protocol cljs-time.core/InTimeUnitProtocol, :name cljs-time.core/in-months, :variadic false, :file "resources/public/js/compiled/out/cljs_time/core.cljs", :end-column 13, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 104, :end-line 112, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Return the time in months", :test true}, period {:protocol-inline nil, :meta {:top-fn {:variadic true, :max-fixed-arity 2, :method-params ([period value]), :arglists ([period value] [p1 v1 & kvs]), :arglists-meta (nil nil)}, :arglists (quote ([period value] [p1 v1 & kvs])), :end-column 13, :end-line 126, :column 7, :line 126, :file "/Users/fabian/Code/go/src/github.com/fuzzyants/wikingo/app/resources/public/js/compiled/out/cljs_time/core.cljs"}, :name cljs-time.core/period, :variadic true, :file "resources/public/js/compiled/out/cljs_time/core.cljs", :end-column 13, :top-fn {:variadic true, :max-fixed-arity 2, :method-params ([period value]), :arglists ([period value] [p1 v1 & kvs]), :arglists-meta (nil nil)}, :method-params ([period value]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 126, :end-line 126, :max-fixed-arity 2, :fn-var true, :arglists ([period value] [p1 v1 & kvs]), :test true}, ago {:protocol-inline nil, :meta {:arglists (quote ([period])), :doc "Returns a DateTime a supplied period before the present.\n\n  e.g. `(-> 5 years ago)`", :end-column 10, :end-line 477, :column 7, :line 477, :file "/Users/fabian/Code/go/src/github.com/fuzzyants/wikingo/app/resources/public/js/compiled/out/cljs_time/core.cljs"}, :name cljs-time.core/ago, :variadic false, :file "resources/public/js/compiled/out/cljs_time/core.cljs", :end-column 10, :method-params ([period]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 477, :end-line 477, :max-fixed-arity 1, :fn-var true, :arglists (quote ([period])), :doc "Returns a DateTime a supplied period before the present.\n\n  e.g. `(-> 5 years ago)`", :test true}, minutes {:protocol-inline nil, :meta {:top-fn {:variadic false, :max-fixed-arity 1, :method-params ([] [n]), :arglists ([] [n]), :arglists-meta (nil nil)}, :arglists (quote ([] [n])), :doc "Given a number, returns a Period representing that many minutes.\n  Without an argument, returns a Period representing only minutes.", :end-column 14, :end-line 443, :column 7, :line 443, :file "/Users/fabian/Code/go/src/github.com/fuzzyants/wikingo/app/resources/public/js/compiled/out/cljs_time/core.cljs"}, :name cljs-time.core/minutes, :variadic false, :file "resources/public/js/compiled/out/cljs_time/core.cljs", :end-column 14, :top-fn {:variadic false, :max-fixed-arity 1, :method-params ([] [n]), :arglists ([] [n]), :arglists-meta (nil nil)}, :method-params ([] [n]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 443, :end-line 443, :max-fixed-arity 1, :fn-var true, :arglists ([] [n]), :doc "Given a number, returns a Period representing that many minutes.\n  Without an argument, returns a Period representing only minutes.", :test true}, from-default-time-zone {:protocol-inline nil, :meta {:arglists (quote ([dt])), :doc "Assuming `dt` is in the UTC timezone, returns a DateTime\n  corresponding to the same point in calendar time as the given\n  DateTime, but for a correspondingly different absolute instant in\n  time in the default (local) timezone.\n\n  Note: This implementation uses the ECMAScript 5.1 implementation which\n  trades some historical daylight savings transition accuracy for simplicity.\n  see http://es5.github.io/#x15.9.1.8\n  ", :end-column 29, :end-line 394, :column 7, :line 394, :file "/Users/fabian/Code/go/src/github.com/fuzzyants/wikingo/app/resources/public/js/compiled/out/cljs_time/core.cljs"}, :name cljs-time.core/from-default-time-zone, :variadic false, :file "resources/public/js/compiled/out/cljs_time/core.cljs", :end-column 29, :method-params ([dt]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 394, :end-line 394, :max-fixed-arity 1, :fn-var true, :arglists (quote ([dt])), :doc "Assuming `dt` is in the UTC timezone, returns a DateTime\n  corresponding to the same point in calendar time as the given\n  DateTime, but for a correspondingly different absolute instant in\n  time in the default (local) timezone.\n\n  Note: This implementation uses the ECMAScript 5.1 implementation which\n  trades some historical daylight savings transition accuracy for simplicity.\n  see http://es5.github.io/#x15.9.1.8\n  ", :test true}, date? {:protocol-inline nil, :meta {:arglists (quote ([x])), :end-column 12, :end-line 646, :column 7, :line 646, :file "/Users/fabian/Code/go/src/github.com/fuzzyants/wikingo/app/resources/public/js/compiled/out/cljs_time/core.cljs"}, :name cljs-time.core/date?, :variadic false, :file "resources/public/js/compiled/out/cljs_time/core.cljs", :end-column 12, :method-params ([x]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 646, :end-line 646, :max-fixed-arity 1, :fn-var true, :arglists (quote ([x])), :test true}, end {:protocol-inline nil, :meta {:arglists (quote ([in])), :doc "Returns the end DateTime of an Interval.", :end-column 10, :end-line 514, :column 7, :line 514, :file "/Users/fabian/Code/go/src/github.com/fuzzyants/wikingo/app/resources/public/js/compiled/out/cljs_time/core.cljs"}, :name cljs-time.core/end, :variadic false, :file "resources/public/js/compiled/out/cljs_time/core.cljs", :end-column 10, :method-params ([in]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 514, :end-line 514, :max-fixed-arity 1, :fn-var true, :arglists (quote ([in])), :doc "Returns the end DateTime of an Interval.", :test true}, interval? {:protocol-inline nil, :meta {:arglists (quote ([x])), :end-column 16, :end-line 649, :column 7, :line 649, :file "/Users/fabian/Code/go/src/github.com/fuzzyants/wikingo/app/resources/public/js/compiled/out/cljs_time/core.cljs"}, :name cljs-time.core/interval?, :variadic false, :file "resources/public/js/compiled/out/cljs_time/core.cljs", :end-column 16, :method-params ([x]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 649, :end-line 649, :max-fixed-arity 1, :fn-var true, :arglists (quote ([x])), :test true}, in-weeks {:protocol-inline nil, :meta {:arglists (quote ([this])), :doc "Return the time in weeks", :protocol cljs-time.core/InTimeUnitProtocol, :end-column 12, :end-line 111, :column 4, :line 111, :file "/Users/fabian/Code/go/src/github.com/fuzzyants/wikingo/app/resources/public/js/compiled/out/cljs_time/core.cljs"}, :protocol cljs-time.core/InTimeUnitProtocol, :name cljs-time.core/in-weeks, :variadic false, :file "resources/public/js/compiled/out/cljs_time/core.cljs", :end-column 12, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 104, :end-line 111, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Return the time in weeks", :test true}, to-default-time-zone {:protocol-inline nil, :meta {:arglists (quote ([dt])), :doc "Assuming `dt` is in the UTC timezone, returns a DateTime\n  corresponding to the same absolute instant in time as the given\n  DateTime, but with calendar fields corresponding to in the default\n  (local) timezone.", :end-column 27, :end-line 386, :column 7, :line 386, :file "/Users/fabian/Code/go/src/github.com/fuzzyants/wikingo/app/resources/public/js/compiled/out/cljs_time/core.cljs"}, :name cljs-time.core/to-default-time-zone, :variadic false, :file "resources/public/js/compiled/out/cljs_time/core.cljs", :end-column 27, :method-params ([dt]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 386, :end-line 386, :max-fixed-arity 1, :fn-var true, :arglists (quote ([dt])), :doc "Assuming `dt` is in the UTC timezone, returns a DateTime\n  corresponding to the same absolute instant in time as the given\n  DateTime, but with calendar fields corresponding to in the default\n  (local) timezone.", :test true}, last-day-of-the-month {:protocol-inline nil, :meta {:top-fn {:variadic false, :max-fixed-arity 2, :method-params ([dt] [year month]), :arglists ([dt] [year month]), :arglists-meta (nil nil)}, :arglists (quote ([dt] [year month])), :end-column 28, :end-line 697, :column 7, :line 697, :file "/Users/fabian/Code/go/src/github.com/fuzzyants/wikingo/app/resources/public/js/compiled/out/cljs_time/core.cljs"}, :name cljs-time.core/last-day-of-the-month, :variadic false, :file "resources/public/js/compiled/out/cljs_time/core.cljs", :end-column 28, :top-fn {:variadic false, :max-fixed-arity 2, :method-params ([dt] [year month]), :arglists ([dt] [year month]), :arglists-meta (nil nil)}, :method-params ([dt] [year month]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 697, :end-line 697, :max-fixed-arity 2, :fn-var true, :arglists ([dt] [year month]), :test true}, map->Interval {:protocol-inline nil, :meta {:arglists (quote ([G__29727])), :factory :map, :internal-ctor true, :end-column 20, :end-line 115, :column 12, :line 115, :file "/Users/fabian/Code/go/src/github.com/fuzzyants/wikingo/app/resources/public/js/compiled/out/cljs_time/core.cljs"}, :name cljs-time.core/map->Interval, :variadic false, :file "resources/public/js/compiled/out/cljs_time/core.cljs", :end-column 20, :method-params ([G__29727]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :internal-ctor true, :factory :map, :line 115, :end-line 115, :max-fixed-arity 1, :fn-var true, :arglists (quote ([G__29727])), :test true}, total-days-in-whole-months {:protocol-inline nil, :meta {:arglists (quote ([interval])), :private true, :end-column 34, :end-line 530, :column 8, :line 530, :file "/Users/fabian/Code/go/src/github.com/fuzzyants/wikingo/app/resources/public/js/compiled/out/cljs_time/core.cljs"}, :private true, :name cljs-time.core/total-days-in-whole-months, :variadic false, :file "resources/public/js/compiled/out/cljs_time/core.cljs", :end-column 34, :method-params ([interval]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 530, :end-line 530, :max-fixed-arity 1, :fn-var true, :arglists (quote ([interval])), :test true}, = {:meta {:doc "**Note:** Equality in goog.date.* (and also with plain\njavascript dates) is not the same as in Joda/clj-time. Two date\nobjects representing the same instant in time in goog.date.* are not\nequal.\n\nIf you need to test for equality use either `cljs-time.core/=`, or\noptionally you can require the `cljs-time.extend` namespace which will\nextend the goog.date.* datatypes, so that clojure.core/= works as\nexpected.", :end-column 4, :end-line 84, :column 3, :line 84, :file "/Users/fabian/Code/go/src/github.com/fuzzyants/wikingo/app/resources/public/js/compiled/out/cljs_time/core.cljs"}, :file "resources/public/js/compiled/out/cljs_time/core.cljs", :line 75, :column 1, :end-line 84, :end-column 4, :doc "**Note:** Equality in goog.date.* (and also with plain\njavascript dates) is not the same as in Joda/clj-time. Two date\nobjects representing the same instant in time in goog.date.* are not\nequal.\n\nIf you need to test for equality use either `cljs-time.core/=`, or\noptionally you can require the `cljs-time.extend` namespace which will\nextend the goog.date.* datatypes, so that clojure.core/= works as\nexpected.", :test true, :name cljs-time.core/=}, millis {:protocol-inline nil, :meta {:top-fn {:variadic false, :max-fixed-arity 1, :method-params ([] [n]), :arglists ([] [n]), :arglists-meta (nil nil)}, :arglists (quote ([] [n])), :doc "Given a number, returns a Period representing that many milliseconds.\n  Without an argument, returns a Period representing only milliseconds.", :end-column 13, :end-line 455, :column 7, :line 455, :file "/Users/fabian/Code/go/src/github.com/fuzzyants/wikingo/app/resources/public/js/compiled/out/cljs_time/core.cljs"}, :name cljs-time.core/millis, :variadic false, :file "resources/public/js/compiled/out/cljs_time/core.cljs", :end-column 13, :top-fn {:variadic false, :max-fixed-arity 1, :method-params ([] [n]), :arglists ([] [n]), :arglists-meta (nil nil)}, :method-params ([] [n]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 455, :end-line 455, :max-fixed-arity 1, :fn-var true, :arglists ([] [n]), :doc "Given a number, returns a Period representing that many milliseconds.\n  Without an argument, returns a Period representing only milliseconds.", :test true}, weeks {:protocol-inline nil, :meta {:top-fn {:variadic false, :max-fixed-arity 1, :method-params ([] [n]), :arglists ([] [n]), :arglists-meta (nil nil)}, :arglists (quote ([] [n])), :doc "Given a number, returns a Period representing that many weeks.\n  Without an argument, returns a Period representing only weeks.", :end-column 12, :end-line 425, :column 7, :line 425, :file "/Users/fabian/Code/go/src/github.com/fuzzyants/wikingo/app/resources/public/js/compiled/out/cljs_time/core.cljs"}, :name cljs-time.core/weeks, :variadic false, :file "resources/public/js/compiled/out/cljs_time/core.cljs", :end-column 12, :top-fn {:variadic false, :max-fixed-arity 1, :method-params ([] [n]), :arglists ([] [n]), :arglists-meta (nil nil)}, :method-params ([] [n]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 425, :end-line 425, :max-fixed-arity 1, :fn-var true, :arglists ([] [n]), :doc "Given a number, returns a Period representing that many weeks.\n  Without an argument, returns a Period representing only weeks.", :test true}, days? {:protocol-inline nil, :meta {:arglists (quote ([val])), :doc "Returns true if the given value is an instance of Days", :end-column 12, :end-line 673, :column 7, :line 673, :file "/Users/fabian/Code/go/src/github.com/fuzzyants/wikingo/app/resources/public/js/compiled/out/cljs_time/core.cljs"}, :name cljs-time.core/days?, :variadic false, :file "resources/public/js/compiled/out/cljs_time/core.cljs", :end-column 12, :method-params ([val]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 673, :end-line 673, :max-fixed-arity 1, :fn-var true, :arglists (quote ([val])), :doc "Returns true if the given value is an instance of Days", :test true}, years? {:protocol-inline nil, :meta {:arglists (quote ([val])), :doc "Returns true if the given value is an instance of Years", :end-column 13, :end-line 658, :column 7, :line 658, :file "/Users/fabian/Code/go/src/github.com/fuzzyants/wikingo/app/resources/public/js/compiled/out/cljs_time/core.cljs"}, :name cljs-time.core/years?, :variadic false, :file "resources/public/js/compiled/out/cljs_time/core.cljs", :end-column 13, :method-params ([val]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 658, :end-line 658, :max-fixed-arity 1, :fn-var true, :arglists (quote ([val])), :doc "Returns true if the given value is an instance of Years", :test true}, minute {:protocol-inline nil, :meta {:arglists (quote ([this])), :doc "Return the minute of hour component of the given date/time.", :protocol cljs-time.core/DateTimeProtocol, :end-column 10, :end-line 93, :column 4, :line 93, :file "/Users/fabian/Code/go/src/github.com/fuzzyants/wikingo/app/resources/public/js/compiled/out/cljs_time/core.cljs"}, :protocol cljs-time.core/DateTimeProtocol, :name cljs-time.core/minute, :variadic false, :file "resources/public/js/compiled/out/cljs_time/core.cljs", :end-column 10, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 86, :end-line 93, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Return the minute of hour component of the given date/time.", :test true}, mins-ago {:protocol-inline nil, :meta {:arglists (quote ([d])), :end-column 15, :end-line 693, :column 7, :line 693, :file "/Users/fabian/Code/go/src/github.com/fuzzyants/wikingo/app/resources/public/js/compiled/out/cljs_time/core.cljs"}, :name cljs-time.core/mins-ago, :variadic false, :file "resources/public/js/compiled/out/cljs_time/core.cljs", :end-column 15, :method-params ([d]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 693, :end-line 693, :max-fixed-arity 1, :fn-var true, :arglists (quote ([d])), :test true}, time-zone-for-offset {:protocol-inline nil, :meta {:top-fn {:variadic false, :max-fixed-arity 2, :method-params ([hours] [hours minutes]), :arglists ([hours] [hours minutes]), :arglists-meta (nil nil)}, :arglists (quote ([hours] [hours minutes])), :doc "Returns a timezone map for the given offset, specified either in hours or\n  hours and minutes.", :end-column 27, :end-line 359, :column 7, :line 359, :file "/Users/fabian/Code/go/src/github.com/fuzzyants/wikingo/app/resources/public/js/compiled/out/cljs_time/core.cljs"}, :name cljs-time.core/time-zone-for-offset, :variadic false, :file "resources/public/js/compiled/out/cljs_time/core.cljs", :end-column 27, :top-fn {:variadic false, :max-fixed-arity 2, :method-params ([hours] [hours minutes]), :arglists ([hours] [hours minutes]), :arglists-meta (nil nil)}, :method-params ([hours] [hours minutes]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 359, :end-line 359, :max-fixed-arity 2, :fn-var true, :arglists ([hours] [hours minutes]), :doc "Returns a timezone map for the given offset, specified either in hours or\n  hours and minutes.", :test true}, periods {:meta {:end-column 13, :end-line 132, :column 6, :line 132, :file "/Users/fabian/Code/go/src/github.com/fuzzyants/wikingo/app/resources/public/js/compiled/out/cljs_time/core.cljs"}, :file "resources/public/js/compiled/out/cljs_time/core.cljs", :line 132, :column 1, :end-line 132, :end-column 13, :test true, :name cljs-time.core/periods}, do-at* {:protocol-inline nil, :meta {:arglists (quote ([base-date-time body-fn])), :end-column 13, :end-line 762, :column 7, :line 762, :file "/Users/fabian/Code/go/src/github.com/fuzzyants/wikingo/app/resources/public/js/compiled/out/cljs_time/core.cljs"}, :name cljs-time.core/do-at*, :variadic false, :file "resources/public/js/compiled/out/cljs_time/core.cljs", :end-column 13, :method-params ([base-date-time body-fn]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 762, :end-line 762, :max-fixed-arity 2, :fn-var true, :arglists (quote ([base-date-time body-fn])), :test true}, in-seconds {:protocol-inline nil, :meta {:arglists (quote ([this])), :doc "Return the time in seconds.", :protocol cljs-time.core/InTimeUnitProtocol, :end-column 14, :end-line 107, :column 4, :line 107, :file "/Users/fabian/Code/go/src/github.com/fuzzyants/wikingo/app/resources/public/js/compiled/out/cljs_time/core.cljs"}, :protocol cljs-time.core/InTimeUnitProtocol, :name cljs-time.core/in-seconds, :variadic false, :file "resources/public/js/compiled/out/cljs_time/core.cljs", :end-column 14, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 104, :end-line 107, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Return the time in seconds.", :test true}, after? {:protocol-inline nil, :meta {:arglists (quote ([this that])), :doc "Returns true if DateTime 'this' is strictly after date/time 'that'.", :protocol cljs-time.core/DateTimeProtocol, :end-column 10, :end-line 97, :column 4, :line 97, :file "/Users/fabian/Code/go/src/github.com/fuzzyants/wikingo/app/resources/public/js/compiled/out/cljs_time/core.cljs"}, :protocol cljs-time.core/DateTimeProtocol, :name cljs-time.core/after?, :variadic false, :file "resources/public/js/compiled/out/cljs_time/core.cljs", :end-column 10, :method-params ([this that]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 86, :end-line 97, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this that])), :doc "Returns true if DateTime 'this' is strictly after date/time 'that'.", :test true}, offset-ms-fn {:protocol-inline nil, :meta {:arglists (quote ([offset])), :end-column 19, :end-line 249, :column 7, :line 249, :file "/Users/fabian/Code/go/src/github.com/fuzzyants/wikingo/app/resources/public/js/compiled/out/cljs_time/core.cljs"}, :name cljs-time.core/offset-ms-fn, :variadic false, :file "resources/public/js/compiled/out/cljs_time/core.cljs", :end-column 19, :method-params ([offset]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 249, :end-line 249, :max-fixed-arity 1, :fn-var true, :arglists (quote ([offset])), :test true}, seconds? {:protocol-inline nil, :meta {:arglists (quote ([val])), :doc "Returns true if the given value is an instance of Seconds", :end-column 15, :end-line 688, :column 7, :line 688, :file "/Users/fabian/Code/go/src/github.com/fuzzyants/wikingo/app/resources/public/js/compiled/out/cljs_time/core.cljs"}, :name cljs-time.core/seconds?, :variadic false, :file "resources/public/js/compiled/out/cljs_time/core.cljs", :end-column 15, :method-params ([val]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 688, :end-line 688, :max-fixed-arity 1, :fn-var true, :arglists (quote ([val])), :doc "Returns true if the given value is an instance of Seconds", :test true}, hour {:protocol-inline nil, :meta {:arglists (quote ([this])), :doc "Return the hour of day component of the given date/time. A time of 12:01am will have an hour component of 0.", :protocol cljs-time.core/DateTimeProtocol, :end-column 8, :end-line 92, :column 4, :line 92, :file "/Users/fabian/Code/go/src/github.com/fuzzyants/wikingo/app/resources/public/js/compiled/out/cljs_time/core.cljs"}, :protocol cljs-time.core/DateTimeProtocol, :name cljs-time.core/hour, :variadic false, :file "resources/public/js/compiled/out/cljs_time/core.cljs", :end-column 8, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 86, :end-line 92, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Return the hour of day component of the given date/time. A time of 12:01am will have an hour component of 0.", :test true}, epoch {:protocol-inline nil, :meta {:arglists (quote ([])), :doc "Returns a DateTime for the begining of the Unix epoch in the UTC time zone.", :end-column 12, :end-line 283, :column 7, :line 283, :file "/Users/fabian/Code/go/src/github.com/fuzzyants/wikingo/app/resources/public/js/compiled/out/cljs_time/core.cljs"}, :name cljs-time.core/epoch, :variadic false, :file "resources/public/js/compiled/out/cljs_time/core.cljs", :end-column 12, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 283, :end-line 283, :max-fixed-arity 0, :fn-var true, :arglists (quote ([])), :doc "Returns a DateTime for the begining of the Unix epoch in the UTC time zone.", :test true}, from-now {:protocol-inline nil, :meta {:arglists (quote ([period])), :doc "Returns a DateTime a supplied period after the present.\n  e.g. `(-> 30 minutes from-now)`", :end-column 15, :end-line 489, :column 7, :line 489, :file "/Users/fabian/Code/go/src/github.com/fuzzyants/wikingo/app/resources/public/js/compiled/out/cljs_time/core.cljs"}, :name cljs-time.core/from-now, :variadic false, :file "resources/public/js/compiled/out/cljs_time/core.cljs", :end-column 15, :method-params ([period]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 489, :end-line 489, :max-fixed-arity 1, :fn-var true, :arglists (quote ([period])), :doc "Returns a DateTime a supplied period after the present.\n  e.g. `(-> 30 minutes from-now)`", :test true}, day {:protocol-inline nil, :meta {:arglists (quote ([this])), :doc "Return the day of month component of the given date/time.", :protocol cljs-time.core/DateTimeProtocol, :end-column 7, :end-line 90, :column 4, :line 90, :file "/Users/fabian/Code/go/src/github.com/fuzzyants/wikingo/app/resources/public/js/compiled/out/cljs_time/core.cljs"}, :protocol cljs-time.core/DateTimeProtocol, :name cljs-time.core/day, :variadic false, :file "resources/public/js/compiled/out/cljs_time/core.cljs", :end-column 7, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 86, :end-line 90, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Return the day of month component of the given date/time.", :test true}, in-minutes {:protocol-inline nil, :meta {:arglists (quote ([this])), :doc "Return the time in minutes.", :protocol cljs-time.core/InTimeUnitProtocol, :end-column 14, :end-line 108, :column 4, :line 108, :file "/Users/fabian/Code/go/src/github.com/fuzzyants/wikingo/app/resources/public/js/compiled/out/cljs_time/core.cljs"}, :protocol cljs-time.core/InTimeUnitProtocol, :name cljs-time.core/in-minutes, :variadic false, :file "resources/public/js/compiled/out/cljs_time/core.cljs", :end-column 14, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 104, :end-line 108, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Return the time in minutes.", :test true}, local-date-time {:protocol-inline nil, :meta {:top-fn {:variadic false, :max-fixed-arity 7, :method-params ([year] [year month] [year month day] [year month day hour] [year month day hour minute] [year month day hour minute second] [year month day hour minute second millis]), :arglists ([year] [year month] [year month day] [year month day hour] [year month day hour minute] [year month day hour minute second] [year month day hour minute second millis]), :arglists-meta (nil nil nil nil nil nil nil)}, :arglists (quote ([year] [year month] [year month day] [year month day hour] [year month day hour minute] [year month day hour minute second] [year month day hour minute second millis])), :doc "Constructs and returns a new local DateTime.\nSpecify the year, month of year, day of month, hour of day, minute of hour,\nsecond of minute, and millisecond of second. Note that month and day are\n1-indexed while hour, second, minute, and millis are 0-indexed.\nAny number of least-significant components can be ommited, in which case\nthey will default to 1 or 0 as appropriate.", :end-column 22, :end-line 325, :column 7, :line 325, :file "/Users/fabian/Code/go/src/github.com/fuzzyants/wikingo/app/resources/public/js/compiled/out/cljs_time/core.cljs"}, :name cljs-time.core/local-date-time, :variadic false, :file "resources/public/js/compiled/out/cljs_time/core.cljs", :end-column 22, :top-fn {:variadic false, :max-fixed-arity 7, :method-params ([year] [year month] [year month day] [year month day hour] [year month day hour minute] [year month day hour minute second] [year month day hour minute second millis]), :arglists ([year] [year month] [year month day] [year month day hour] [year month day hour minute] [year month day hour minute second] [year month day hour minute second millis]), :arglists-meta (nil nil nil nil nil nil nil)}, :method-params ([year] [year month] [year month day] [year month day hour] [year month day hour minute] [year month day hour minute second] [year month day hour minute second millis]), :protocol-impl nil, :arglists-meta (nil nil nil nil nil nil nil), :column 1, :line 325, :end-line 325, :max-fixed-arity 7, :fn-var true, :arglists ([year] [year month] [year month day] [year month day hour] [year month day hour minute] [year month day hour minute second] [year month day hour minute second millis]), :doc "Constructs and returns a new local DateTime.\nSpecify the year, month of year, day of month, hour of day, minute of hour,\nsecond of minute, and millisecond of second. Note that month and day are\n1-indexed while hour, second, minute, and millis are 0-indexed.\nAny number of least-significant components can be ommited, in which case\nthey will default to 1 or 0 as appropriate.", :test true}, in-years- {:protocol-inline nil, :meta {:arglists (quote ([{:keys [start end]}])), :doc "Returns the number of standard years in the given Interval.", :private true, :end-column 17, :end-line 547, :column 8, :line 547, :file "/Users/fabian/Code/go/src/github.com/fuzzyants/wikingo/app/resources/public/js/compiled/out/cljs_time/core.cljs"}, :private true, :name cljs-time.core/in-years-, :variadic false, :file "resources/public/js/compiled/out/cljs_time/core.cljs", :end-column 17, :method-params ([p__29843]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 547, :end-line 547, :max-fixed-arity 1, :fn-var true, :arglists (quote ([{:keys [start end]}])), :doc "Returns the number of standard years in the given Interval.", :test true}, overlaps? {:protocol-inline nil, :meta {:top-fn {:variadic false, :max-fixed-arity 4, :method-params ([{start-a :start, end-a :end} {start-b :start, end-b :end}] [start-a end-a start-b end-b]), :arglists ([{start-a :start, end-a :end} {start-b :start, end-b :end}] [start-a end-a start-b end-b]), :arglists-meta (nil nil)}, :arglists (quote ([{start-a :start, end-a :end} {start-b :start, end-b :end}] [start-a end-a start-b end-b])), :doc "With 2 arguments: Returns true of the two given Intervals overlap.\n  Note that intervals that satisfy abuts? do not satisfy overlaps?\n\n  With 4 arguments: Returns true if the range specified by start-a and end-a\n  overlaps with the range specified by start-b and end-b.", :end-column 16, :end-line 626, :column 7, :line 626, :file "/Users/fabian/Code/go/src/github.com/fuzzyants/wikingo/app/resources/public/js/compiled/out/cljs_time/core.cljs"}, :name cljs-time.core/overlaps?, :variadic false, :file "resources/public/js/compiled/out/cljs_time/core.cljs", :end-column 16, :top-fn {:variadic false, :max-fixed-arity 4, :method-params ([{start-a :start, end-a :end} {start-b :start, end-b :end}] [start-a end-a start-b end-b]), :arglists ([{start-a :start, end-a :end} {start-b :start, end-b :end}] [start-a end-a start-b end-b]), :arglists-meta (nil nil)}, :method-params ([{start-a :start, end-a :end} {start-b :start, end-b :end}] [start-a end-a start-b end-b]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 626, :end-line 626, :max-fixed-arity 4, :fn-var true, :arglists ([{start-a :start, end-a :end} {start-b :start, end-b :end}] [start-a end-a start-b end-b]), :doc "With 2 arguments: Returns true of the two given Intervals overlap.\n  Note that intervals that satisfy abuts? do not satisfy overlaps?\n\n  With 4 arguments: Returns true if the range specified by start-a and end-a\n  overlaps with the range specified by start-b and end-b.", :test true}, date-time {:protocol-inline nil, :meta {:top-fn {:variadic false, :max-fixed-arity 7, :method-params ([year] [year month] [year month day] [year month day hour] [year month day hour minute] [year month day hour minute second] [year month day hour minute second millis]), :arglists ([year] [year month] [year month day] [year month day hour] [year month day hour minute] [year month day hour minute second] [year month day hour minute second millis]), :arglists-meta (nil nil nil nil nil nil nil)}, :arglists (quote ([year] [year month] [year month day] [year month day hour] [year month day hour minute] [year month day hour minute second] [year month day hour minute second millis])), :doc "Constructs and returns a new DateTime in UTC.\n\n  Specify the year, month of year, day of month, hour of day, minute if hour,\n  second of minute, and millisecond of second. Note that month and day are\n  1-indexed while hour, second, minute, and millis are 0-indexed.\n\n  Any number of least-significant components can be ommited, in which case\n  they will default to 1 or 0 as appropriate.", :end-column 16, :end-line 301, :column 7, :line 301, :file "/Users/fabian/Code/go/src/github.com/fuzzyants/wikingo/app/resources/public/js/compiled/out/cljs_time/core.cljs"}, :name cljs-time.core/date-time, :variadic false, :file "resources/public/js/compiled/out/cljs_time/core.cljs", :end-column 16, :top-fn {:variadic false, :max-fixed-arity 7, :method-params ([year] [year month] [year month day] [year month day hour] [year month day hour minute] [year month day hour minute second] [year month day hour minute second millis]), :arglists ([year] [year month] [year month day] [year month day hour] [year month day hour minute] [year month day hour minute second] [year month day hour minute second millis]), :arglists-meta (nil nil nil nil nil nil nil)}, :method-params ([year] [year month] [year month day] [year month day hour] [year month day hour minute] [year month day hour minute second] [year month day hour minute second millis]), :protocol-impl nil, :arglists-meta (nil nil nil nil nil nil nil), :column 1, :line 301, :end-line 301, :max-fixed-arity 7, :fn-var true, :arglists ([year] [year month] [year month day] [year month day hour] [year month day hour minute] [year month day hour minute second] [year month day hour minute second millis]), :doc "Constructs and returns a new DateTime in UTC.\n\n  Specify the year, month of year, day of month, hour of day, minute if hour,\n  second of minute, and millisecond of second. Note that month and day are\n  1-indexed while hour, second, minute, and millis are 0-indexed.\n\n  Any number of least-significant components can be ommited, in which case\n  they will default to 1 or 0 as appropriate.", :test true}, first-day-of-the-month {:protocol-inline nil, :meta {:top-fn {:variadic false, :max-fixed-arity 2, :method-params ([dt] [year month]), :arglists ([dt] [year month]), :arglists-meta (nil nil)}, :arglists (quote ([dt] [year month])), :end-column 29, :end-line 709, :column 7, :line 709, :file "/Users/fabian/Code/go/src/github.com/fuzzyants/wikingo/app/resources/public/js/compiled/out/cljs_time/core.cljs"}, :name cljs-time.core/first-day-of-the-month, :variadic false, :file "resources/public/js/compiled/out/cljs_time/core.cljs", :end-column 29, :top-fn {:variadic false, :max-fixed-arity 2, :method-params ([dt] [year month]), :arglists ([dt] [year month]), :arglists-meta (nil nil)}, :method-params ([dt] [year month]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 709, :end-line 709, :max-fixed-arity 2, :fn-var true, :arglists ([dt] [year month]), :test true}, default-time-zone {:protocol-inline nil, :meta {:arglists (quote ([])), :doc "Returns the default timezone map for the current environment.", :end-column 24, :end-line 378, :column 7, :line 378, :file "/Users/fabian/Code/go/src/github.com/fuzzyants/wikingo/app/resources/public/js/compiled/out/cljs_time/core.cljs"}, :name cljs-time.core/default-time-zone, :variadic false, :file "resources/public/js/compiled/out/cljs_time/core.cljs", :end-column 24, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 378, :end-line 378, :max-fixed-arity 0, :fn-var true, :arglists (quote ([])), :doc "Returns the default timezone map for the current environment.", :test true}, now {:protocol-inline nil, :meta {:arglists (quote ([])), :doc "Returns a DateTime for the current instant in the UTC time zone.", :end-column 10, :end-line 259, :column 7, :line 259, :file "/Users/fabian/Code/go/src/github.com/fuzzyants/wikingo/app/resources/public/js/compiled/out/cljs_time/core.cljs"}, :name cljs-time.core/now, :variadic false, :file "resources/public/js/compiled/out/cljs_time/core.cljs", :end-column 10, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 259, :end-line 259, :max-fixed-arity 0, :fn-var true, :arglists (quote ([])), :doc "Returns a DateTime for the current instant in the UTC time zone.", :test true}, ->Period {:protocol-inline nil, :meta {:arglists (quote ([years months weeks days hours minutes seconds millis])), :factory :positional, :internal-ctor true, :end-column 18, :end-line 124, :column 12, :line 124, :file "/Users/fabian/Code/go/src/github.com/fuzzyants/wikingo/app/resources/public/js/compiled/out/cljs_time/core.cljs"}, :name cljs-time.core/->Period, :variadic false, :file "resources/public/js/compiled/out/cljs_time/core.cljs", :end-column 18, :method-params ([years months weeks days hours minutes seconds millis]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :internal-ctor true, :factory :positional, :line 124, :end-line 124, :max-fixed-arity 8, :fn-var true, :arglists (quote ([years months weeks days hours minutes seconds millis])), :test true}, *ms-fn* {:meta {:dynamic true, :end-column 23, :end-line 257, :column 16, :line 257, :file "/Users/fabian/Code/go/src/github.com/fuzzyants/wikingo/app/resources/public/js/compiled/out/cljs_time/core.cljs"}, :file "resources/public/js/compiled/out/cljs_time/core.cljs", :line 257, :column 1, :end-line 257, :end-column 23, :dynamic true, :test true, :name cljs-time.core/*ms-fn*}, second {:protocol-inline nil, :meta {:arglists (quote ([this])), :doc "Return the second of minute component of the given date/time.", :protocol cljs-time.core/DateTimeProtocol, :end-column 10, :end-line 95, :column 4, :line 95, :file "/Users/fabian/Code/go/src/github.com/fuzzyants/wikingo/app/resources/public/js/compiled/out/cljs_time/core.cljs"}, :protocol cljs-time.core/DateTimeProtocol, :name cljs-time.core/second, :variadic false, :file "resources/public/js/compiled/out/cljs_time/core.cljs", :end-column 10, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 86, :end-line 95, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Return the second of minute component of the given date/time.", :test true}, conversion-error {:protocol-inline nil, :meta {:arglists (quote ([from to])), :end-column 23, :end-line 560, :column 7, :line 560, :file "/Users/fabian/Code/go/src/github.com/fuzzyants/wikingo/app/resources/public/js/compiled/out/cljs_time/core.cljs"}, :name cljs-time.core/conversion-error, :variadic false, :file "resources/public/js/compiled/out/cljs_time/core.cljs", :end-column 23, :method-params ([from to]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 560, :end-line 560, :max-fixed-arity 2, :fn-var true, :arglists (quote ([from to])), :test true}, utc {:meta {:end-column 9, :end-line 240, :column 6, :line 240, :file "/Users/fabian/Code/go/src/github.com/fuzzyants/wikingo/app/resources/public/js/compiled/out/cljs_time/core.cljs"}, :file "resources/public/js/compiled/out/cljs_time/core.cljs", :line 240, :column 1, :end-line 240, :end-column 9, :test true, :name cljs-time.core/utc}, extend {:protocol-inline nil, :meta {:top-fn {:variadic true, :max-fixed-arity 1, :method-params [(in by)], :arglists [[in & by]], :arglists-meta (nil)}, :arglists (quote ([in & by])), :doc "Returns an Interval with an end DateTime the specified Period after the end\n  of the given Interval", :end-column 13, :end-line 519, :column 7, :line 519, :file "/Users/fabian/Code/go/src/github.com/fuzzyants/wikingo/app/resources/public/js/compiled/out/cljs_time/core.cljs"}, :name cljs-time.core/extend, :variadic true, :file "resources/public/js/compiled/out/cljs_time/core.cljs", :end-column 13, :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(in by)], :arglists [[in & by]], :arglists-meta (nil)}, :method-params [(in by)], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 519, :end-line 519, :max-fixed-arity 1, :fn-var true, :arglists [[in & by]], :doc "Returns an Interval with an end DateTime the specified Period after the end\n  of the given Interval", :test true}, months? {:protocol-inline nil, :meta {:arglists (quote ([val])), :doc "Returns true if the given value is an instance of Months", :end-column 14, :end-line 663, :column 7, :line 663, :file "/Users/fabian/Code/go/src/github.com/fuzzyants/wikingo/app/resources/public/js/compiled/out/cljs_time/core.cljs"}, :name cljs-time.core/months?, :variadic false, :file "resources/public/js/compiled/out/cljs_time/core.cljs", :end-column 14, :method-params ([val]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 663, :end-line 663, :max-fixed-arity 1, :fn-var true, :arglists (quote ([val])), :doc "Returns true if the given value is an instance of Months", :test true}, date-midnight {:protocol-inline nil, :meta {:top-fn {:variadic false, :max-fixed-arity 3, :method-params ([year] [year month] [year month day]), :arglists ([year] [year month] [year month day]), :arglists-meta (nil nil nil)}, :arglists (quote ([year] [year month] [year month day])), :doc "Constructs and returns a new DateTime at midnight in UTC.\n\n  Specify the year, month of year, day of month. Note that month and day are\n  1-indexed. Any number of least-significant components can be ommited, in\n  which case they will default to 1.", :end-column 20, :end-line 288, :column 7, :line 288, :file "/Users/fabian/Code/go/src/github.com/fuzzyants/wikingo/app/resources/public/js/compiled/out/cljs_time/core.cljs"}, :name cljs-time.core/date-midnight, :variadic false, :file "resources/public/js/compiled/out/cljs_time/core.cljs", :end-column 20, :top-fn {:variadic false, :max-fixed-arity 3, :method-params ([year] [year month] [year month day]), :arglists ([year] [year month] [year month day]), :arglists-meta (nil nil nil)}, :method-params ([year] [year month] [year month day]), :protocol-impl nil, :arglists-meta (nil nil nil), :column 1, :line 288, :end-line 288, :max-fixed-arity 3, :fn-var true, :arglists ([year] [year month] [year month day]), :doc "Constructs and returns a new DateTime at midnight in UTC.\n\n  Specify the year, month of year, day of month. Note that month and day are\n  1-indexed. Any number of least-significant components can be ommited, in\n  which case they will default to 1.", :test true}, plus- {:protocol-inline nil, :meta {:arglists (quote ([this period])), :doc "Returns a new date/time corresponding to the given date/time moved forwards by the given Period(s).", :protocol cljs-time.core/DateTimeProtocol, :end-column 9, :end-line 99, :column 4, :line 99, :file "/Users/fabian/Code/go/src/github.com/fuzzyants/wikingo/app/resources/public/js/compiled/out/cljs_time/core.cljs"}, :protocol cljs-time.core/DateTimeProtocol, :name cljs-time.core/plus-, :variadic false, :file "resources/public/js/compiled/out/cljs_time/core.cljs", :end-column 9, :method-params ([this period]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 86, :end-line 99, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this period])), :doc "Returns a new date/time corresponding to the given date/time moved forwards by the given Period(s).", :test true}, time-now {:protocol-inline nil, :meta {:arglists (quote ([])), :doc "Returns a local DateTime for the current instant without date or time zone\n  in the current time zone.", :end-column 15, :end-line 264, :column 7, :line 264, :file "/Users/fabian/Code/go/src/github.com/fuzzyants/wikingo/app/resources/public/js/compiled/out/cljs_time/core.cljs"}, :name cljs-time.core/time-now, :variadic false, :file "resources/public/js/compiled/out/cljs_time/core.cljs", :end-column 15, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 264, :end-line 264, :max-fixed-arity 0, :fn-var true, :arglists (quote ([])), :doc "Returns a local DateTime for the current instant without date or time zone\n  in the current time zone.", :test true}, day-of-week {:protocol-inline nil, :meta {:arglists (quote ([this])), :doc "Return the day of week component of the given date/time. Monday is 1 and Sunday is 7", :protocol cljs-time.core/DateTimeProtocol, :end-column 15, :end-line 91, :column 4, :line 91, :file "/Users/fabian/Code/go/src/github.com/fuzzyants/wikingo/app/resources/public/js/compiled/out/cljs_time/core.cljs"}, :protocol cljs-time.core/DateTimeProtocol, :name cljs-time.core/day-of-week, :variadic false, :file "resources/public/js/compiled/out/cljs_time/core.cljs", :end-column 15, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 86, :end-line 91, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Return the day of week component of the given date/time. Monday is 1 and Sunday is 7", :test true}, last-day-of-the-month- {:protocol-inline nil, :meta {:arglists (quote ([this])), :doc "Returns the last day of the month", :protocol cljs-time.core/DateTimeProtocol, :end-column 26, :end-line 102, :column 4, :line 102, :file "/Users/fabian/Code/go/src/github.com/fuzzyants/wikingo/app/resources/public/js/compiled/out/cljs_time/core.cljs"}, :protocol cljs-time.core/DateTimeProtocol, :name cljs-time.core/last-day-of-the-month-, :variadic false, :file "resources/public/js/compiled/out/cljs_time/core.cljs", :end-column 26, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 86, :end-line 102, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Returns the last day of the month", :test true}, number-of-days-in-the-month {:protocol-inline nil, :meta {:top-fn {:variadic false, :max-fixed-arity 2, :method-params ([dt] [year month]), :arglists ([dt] [year month]), :arglists-meta (nil nil)}, :arglists (quote ([dt] [year month])), :end-column 34, :end-line 703, :column 7, :line 703, :file "/Users/fabian/Code/go/src/github.com/fuzzyants/wikingo/app/resources/public/js/compiled/out/cljs_time/core.cljs"}, :name cljs-time.core/number-of-days-in-the-month, :variadic false, :file "resources/public/js/compiled/out/cljs_time/core.cljs", :end-column 34, :top-fn {:variadic false, :max-fixed-arity 2, :method-params ([dt] [year month]), :arglists ([dt] [year month]), :arglists-meta (nil nil)}, :method-params ([dt] [year month]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 703, :end-line 703, :max-fixed-arity 2, :fn-var true, :arglists ([dt] [year month]), :test true}, months {:protocol-inline nil, :meta {:top-fn {:variadic false, :max-fixed-arity 1, :method-params ([] [n]), :arglists ([] [n]), :arglists-meta (nil nil)}, :arglists (quote ([] [n])), :doc "Given a number, returns a Period representing that many months.\n  Without an argument, returns a Period representing only months.", :end-column 13, :end-line 419, :column 7, :line 419, :file "/Users/fabian/Code/go/src/github.com/fuzzyants/wikingo/app/resources/public/js/compiled/out/cljs_time/core.cljs"}, :name cljs-time.core/months, :variadic false, :file "resources/public/js/compiled/out/cljs_time/core.cljs", :end-column 13, :top-fn {:variadic false, :max-fixed-arity 1, :method-params ([] [n]), :arglists ([] [n]), :arglists-meta (nil nil)}, :method-params ([] [n]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 419, :end-line 419, :max-fixed-arity 1, :fn-var true, :arglists ([] [n]), :doc "Given a number, returns a Period representing that many months.\n  Without an argument, returns a Period representing only months.", :test true}, in-days {:protocol-inline nil, :meta {:arglists (quote ([this])), :doc "Return the time in days.", :protocol cljs-time.core/InTimeUnitProtocol, :end-column 11, :end-line 110, :column 4, :line 110, :file "/Users/fabian/Code/go/src/github.com/fuzzyants/wikingo/app/resources/public/js/compiled/out/cljs_time/core.cljs"}, :protocol cljs-time.core/InTimeUnitProtocol, :name cljs-time.core/in-days, :variadic false, :file "resources/public/js/compiled/out/cljs_time/core.cljs", :end-column 11, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 104, :end-line 110, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Return the time in days.", :test true}, today {:protocol-inline nil, :meta {:arglists (quote ([])), :doc "Constructs and returns a new local DateTime representing today's date.\n  local DateTime objects do not deal with timezones at all.", :end-column 12, :end-line 353, :column 7, :line 353, :file "/Users/fabian/Code/go/src/github.com/fuzzyants/wikingo/app/resources/public/js/compiled/out/cljs_time/core.cljs"}, :name cljs-time.core/today, :variadic false, :file "resources/public/js/compiled/out/cljs_time/core.cljs", :end-column 12, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 353, :end-line 353, :max-fixed-arity 0, :fn-var true, :arglists (quote ([])), :doc "Constructs and returns a new local DateTime representing today's date.\n  local DateTime objects do not deal with timezones at all.", :test true}, month {:protocol-inline nil, :meta {:arglists (quote ([this])), :doc "Return the month component of the given date/time.", :protocol cljs-time.core/DateTimeProtocol, :end-column 9, :end-line 89, :column 4, :line 89, :file "/Users/fabian/Code/go/src/github.com/fuzzyants/wikingo/app/resources/public/js/compiled/out/cljs_time/core.cljs"}, :protocol cljs-time.core/DateTimeProtocol, :name cljs-time.core/month, :variadic false, :file "resources/public/js/compiled/out/cljs_time/core.cljs", :end-column 9, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 86, :end-line 89, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Return the month component of the given date/time.", :test true}, in-months- {:protocol-inline nil, :meta {:arglists (quote ([{:keys [start end], :as interval}])), :doc "Returns the number of months in the given Interval.\n\n  For example, the interval 2nd Jan 2012 midnight to 2nd Feb 2012 midnight,\n  returns 1 month.\n\n  Likewise, 29th Dec 2011 midnight to 29th Feb 2012 midnight returns 2 months.\n\n  But also, 31st Dec 2011 midnight to 29th Feb 2012 midnight returns 2 months.\n\n  And, 28th Dec 2012 midnight to 28th Feb 2013 midnight returns 2 months.", :private true, :end-column 18, :end-line 533, :column 8, :line 533, :file "/Users/fabian/Code/go/src/github.com/fuzzyants/wikingo/app/resources/public/js/compiled/out/cljs_time/core.cljs"}, :private true, :name cljs-time.core/in-months-, :variadic false, :file "resources/public/js/compiled/out/cljs_time/core.cljs", :end-column 18, :method-params ([p__29840]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 533, :end-line 533, :max-fixed-arity 1, :fn-var true, :arglists (quote ([{:keys [start end], :as interval}])), :doc "Returns the number of months in the given Interval.\n\n  For example, the interval 2nd Jan 2012 midnight to 2nd Feb 2012 midnight,\n  returns 1 month.\n\n  Likewise, 29th Dec 2011 midnight to 29th Feb 2012 midnight returns 2 months.\n\n  But also, 31st Dec 2011 midnight to 29th Feb 2012 midnight returns 2 months.\n\n  And, 28th Dec 2012 midnight to 28th Feb 2013 midnight returns 2 months.", :test true}, start {:protocol-inline nil, :meta {:arglists (quote ([in])), :doc "Returns the start DateTime of an Interval.", :end-column 12, :end-line 509, :column 7, :line 509, :file "/Users/fabian/Code/go/src/github.com/fuzzyants/wikingo/app/resources/public/js/compiled/out/cljs_time/core.cljs"}, :name cljs-time.core/start, :variadic false, :file "resources/public/js/compiled/out/cljs_time/core.cljs", :end-column 12, :method-params ([in]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 509, :end-line 509, :max-fixed-arity 1, :fn-var true, :arglists (quote ([in])), :doc "Returns the start DateTime of an Interval.", :test true}, minus {:protocol-inline nil, :meta {:top-fn {:variadic true, :max-fixed-arity 2, :method-params ([dt p]), :arglists ([dt p] [dt p & ps]), :arglists-meta (nil nil)}, :arglists (quote ([dt p] [dt p & ps])), :doc "Returns a new date/time object corresponding to the given date/time\n  moved backwards by the given Period(s).", :end-column 12, :end-line 469, :column 7, :line 469, :file "/Users/fabian/Code/go/src/github.com/fuzzyants/wikingo/app/resources/public/js/compiled/out/cljs_time/core.cljs"}, :name cljs-time.core/minus, :variadic true, :file "resources/public/js/compiled/out/cljs_time/core.cljs", :end-column 12, :top-fn {:variadic true, :max-fixed-arity 2, :method-params ([dt p]), :arglists ([dt p] [dt p & ps]), :arglists-meta (nil nil)}, :method-params ([dt p]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 469, :end-line 469, :max-fixed-arity 2, :fn-var true, :arglists ([dt p] [dt p & ps]), :doc "Returns a new date/time object corresponding to the given date/time\n  moved backwards by the given Period(s).", :test true}, days {:protocol-inline nil, :meta {:top-fn {:variadic false, :max-fixed-arity 1, :method-params ([] [n]), :arglists ([] [n]), :arglists-meta (nil nil)}, :arglists (quote ([] [n])), :doc "Given a number, returns a Period representing that many days.\n  Without an argument, returns a Period representing only days.", :end-column 11, :end-line 431, :column 7, :line 431, :file "/Users/fabian/Code/go/src/github.com/fuzzyants/wikingo/app/resources/public/js/compiled/out/cljs_time/core.cljs"}, :name cljs-time.core/days, :variadic false, :file "resources/public/js/compiled/out/cljs_time/core.cljs", :end-column 11, :top-fn {:variadic false, :max-fixed-arity 1, :method-params ([] [n]), :arglists ([] [n]), :arglists-meta (nil nil)}, :method-params ([] [n]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 431, :end-line 431, :max-fixed-arity 1, :fn-var true, :arglists ([] [n]), :doc "Given a number, returns a Period representing that many days.\n  Without an argument, returns a Period representing only days.", :test true}, period-type? {:protocol-inline nil, :meta {:arglists (quote ([type x])), :end-column 19, :end-line 655, :column 7, :line 655, :file "/Users/fabian/Code/go/src/github.com/fuzzyants/wikingo/app/resources/public/js/compiled/out/cljs_time/core.cljs"}, :name cljs-time.core/period-type?, :variadic false, :file "resources/public/js/compiled/out/cljs_time/core.cljs", :end-column 19, :method-params ([type x]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 655, :end-line 655, :max-fixed-arity 2, :fn-var true, :arglists (quote ([type x])), :test true}, in-hours {:protocol-inline nil, :meta {:arglists (quote ([this])), :doc "Return the time in hours.", :protocol cljs-time.core/InTimeUnitProtocol, :end-column 12, :end-line 109, :column 4, :line 109, :file "/Users/fabian/Code/go/src/github.com/fuzzyants/wikingo/app/resources/public/js/compiled/out/cljs_time/core.cljs"}, :protocol cljs-time.core/InTimeUnitProtocol, :name cljs-time.core/in-hours, :variadic false, :file "resources/public/js/compiled/out/cljs_time/core.cljs", :end-column 12, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 104, :end-line 109, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Return the time in hours.", :test true}, map->Period {:protocol-inline nil, :meta {:arglists (quote ([G__29735])), :factory :map, :internal-ctor true, :end-column 18, :end-line 124, :column 12, :line 124, :file "/Users/fabian/Code/go/src/github.com/fuzzyants/wikingo/app/resources/public/js/compiled/out/cljs_time/core.cljs"}, :name cljs-time.core/map->Period, :variadic false, :file "resources/public/js/compiled/out/cljs_time/core.cljs", :end-column 18, :method-params ([G__29735]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :internal-ctor true, :factory :map, :line 124, :end-line 124, :max-fixed-arity 1, :fn-var true, :arglists (quote ([G__29735])), :test true}, at-midnight {:protocol-inline nil, :meta {:arglists (quote ([datetime])), :end-column 18, :end-line 270, :column 7, :line 270, :file "/Users/fabian/Code/go/src/github.com/fuzzyants/wikingo/app/resources/public/js/compiled/out/cljs_time/core.cljs"}, :name cljs-time.core/at-midnight, :variadic false, :file "resources/public/js/compiled/out/cljs_time/core.cljs", :end-column 18, :method-params ([datetime]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 270, :end-line 270, :max-fixed-arity 1, :fn-var true, :arglists (quote ([datetime])), :test true}, DateTimeProtocol {:meta {:protocol-info {:methods {minute [[this]], after? [[this that]], hour [[this]], day [[this]], second [[this]], plus- [[this period]], day-of-week [[this]], last-day-of-the-month- [[this]], month [[this]], before? [[this that]], year [[this]], minus- [[this period]], sec [[this]], first-day-of-the-month- [[this]], milli [[this]]}}, :protocol-symbol true, :doc "Interface for various date time functions", :end-column 30, :end-line 86, :column 14, :line 86, :file "/Users/fabian/Code/go/src/github.com/fuzzyants/wikingo/app/resources/public/js/compiled/out/cljs_time/core.cljs"}, :protocol-symbol true, :name cljs-time.core/DateTimeProtocol, :file "resources/public/js/compiled/out/cljs_time/core.cljs", :end-column 30, :column 1, :line 86, :protocol-info {:methods {minute [[this]], after? [[this that]], hour [[this]], day [[this]], second [[this]], plus- [[this period]], day-of-week [[this]], last-day-of-the-month- [[this]], month [[this]], before? [[this that]], year [[this]], minus- [[this period]], sec [[this]], first-day-of-the-month- [[this]], milli [[this]]}}, :info nil, :end-line 86, :impls #{goog/date.DateTime goog/date.Date goog/date.UtcDateTime}, :doc "Interface for various date time functions", :test true}, InTimeUnitProtocol {:meta {:protocol-info {:methods {in-millis [[this]], in-seconds [[this]], in-minutes [[this]], in-hours [[this]], in-days [[this]], in-weeks [[this]], in-months [[this]], in-years [[this]]}}, :protocol-symbol true, :doc "Interface for in-<time unit> functions", :end-column 32, :end-line 104, :column 14, :line 104, :file "/Users/fabian/Code/go/src/github.com/fuzzyants/wikingo/app/resources/public/js/compiled/out/cljs_time/core.cljs"}, :protocol-symbol true, :name cljs-time.core/InTimeUnitProtocol, :file "resources/public/js/compiled/out/cljs_time/core.cljs", :end-column 32, :column 1, :line 104, :protocol-info {:methods {in-millis [[this]], in-seconds [[this]], in-minutes [[this]], in-hours [[this]], in-days [[this]], in-weeks [[this]], in-months [[this]], in-years [[this]]}}, :info nil, :end-line 104, :impls #{cljs-time/core.Period cljs-time/core.Interval}, :doc "Interface for in-<time unit> functions", :test true}, within? {:protocol-inline nil, :meta {:top-fn {:variadic false, :max-fixed-arity 3, :method-params ([{:keys [start end]} date] [start end date]), :arglists ([{:keys [start end]} date] [start end date]), :arglists-meta (nil nil)}, :arglists (quote ([{:keys [start end]} date] [start end date])), :doc "With 2 arguments: Returns true if the given Interval contains the given\n  DateTime. Note that if the DateTime is exactly equal to the\n  end of the interval, this function returns false.\n\n  With 3 arguments: Returns true if the start DateTime is\n  equal to or before and the end DateTime is equal to or after the test\n  DateTime.", :end-column 14, :end-line 611, :column 7, :line 611, :file "/Users/fabian/Code/go/src/github.com/fuzzyants/wikingo/app/resources/public/js/compiled/out/cljs_time/core.cljs"}, :name cljs-time.core/within?, :variadic false, :file "resources/public/js/compiled/out/cljs_time/core.cljs", :end-column 14, :top-fn {:variadic false, :max-fixed-arity 3, :method-params ([{:keys [start end]} date] [start end date]), :arglists ([{:keys [start end]} date] [start end date]), :arglists-meta (nil nil)}, :method-params ([{:keys [start end]} date] [start end date]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 611, :end-line 611, :max-fixed-arity 3, :fn-var true, :arglists ([{:keys [start end]} date] [start end date]), :doc "With 2 arguments: Returns true if the given Interval contains the given\n  DateTime. Note that if the DateTime is exactly equal to the\n  end of the interval, this function returns false.\n\n  With 3 arguments: Returns true if the start DateTime is\n  equal to or before and the end DateTime is equal to or after the test\n  DateTime.", :test true}, seconds {:protocol-inline nil, :meta {:top-fn {:variadic false, :max-fixed-arity 1, :method-params ([] [n]), :arglists ([] [n]), :arglists-meta (nil nil)}, :arglists (quote ([] [n])), :doc "Given a number, returns a Period representing that many seconds.\n  Without an argument, returns a Period representing only seconds.", :end-column 14, :end-line 449, :column 7, :line 449, :file "/Users/fabian/Code/go/src/github.com/fuzzyants/wikingo/app/resources/public/js/compiled/out/cljs_time/core.cljs"}, :name cljs-time.core/seconds, :variadic false, :file "resources/public/js/compiled/out/cljs_time/core.cljs", :end-column 14, :top-fn {:variadic false, :max-fixed-arity 1, :method-params ([] [n]), :arglists ([] [n]), :arglists-meta (nil nil)}, :method-params ([] [n]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 449, :end-line 449, :max-fixed-arity 1, :fn-var true, :arglists ([] [n]), :doc "Given a number, returns a Period representing that many seconds.\n  Without an argument, returns a Period representing only seconds.", :test true}, in-years {:protocol-inline nil, :meta {:arglists (quote ([this])), :doc "Return the time in years", :protocol cljs-time.core/InTimeUnitProtocol, :end-column 12, :end-line 113, :column 4, :line 113, :file "/Users/fabian/Code/go/src/github.com/fuzzyants/wikingo/app/resources/public/js/compiled/out/cljs_time/core.cljs"}, :protocol cljs-time.core/InTimeUnitProtocol, :name cljs-time.core/in-years, :variadic false, :file "resources/public/js/compiled/out/cljs_time/core.cljs", :end-column 12, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 104, :end-line 113, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Return the time in years", :test true}, ->period {:meta {:end-column 19, :end-line 715, :column 11, :line 715, :file "/Users/fabian/Code/go/src/github.com/fuzzyants/wikingo/app/resources/public/js/compiled/out/cljs_time/core.cljs"}, :file "resources/public/js/compiled/out/cljs_time/core.cljs", :line 715, :column 1, :end-line 715, :end-column 19, :test true, :name cljs-time.core/->period}, today-at-midnight {:protocol-inline nil, :meta {:arglists (quote ([])), :doc "Returns a DateTime for today at midnight in the UTC time zone.", :end-column 24, :end-line 278, :column 7, :line 278, :file "/Users/fabian/Code/go/src/github.com/fuzzyants/wikingo/app/resources/public/js/compiled/out/cljs_time/core.cljs"}, :name cljs-time.core/today-at-midnight, :variadic false, :file "resources/public/js/compiled/out/cljs_time/core.cljs", :end-column 24, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 278, :end-line 278, :max-fixed-arity 0, :fn-var true, :arglists (quote ([])), :doc "Returns a DateTime for today at midnight in the UTC time zone.", :test true}, ->Interval {:protocol-inline nil, :meta {:arglists (quote ([start end])), :factory :positional, :internal-ctor true, :end-column 20, :end-line 115, :column 12, :line 115, :file "/Users/fabian/Code/go/src/github.com/fuzzyants/wikingo/app/resources/public/js/compiled/out/cljs_time/core.cljs"}, :name cljs-time.core/->Interval, :variadic false, :file "resources/public/js/compiled/out/cljs_time/core.cljs", :end-column 20, :method-params ([start end]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :internal-ctor true, :factory :positional, :line 115, :end-line 115, :max-fixed-arity 2, :fn-var true, :arglists (quote ([start end])), :test true}, before? {:protocol-inline nil, :meta {:arglists (quote ([this that])), :doc "Returns true if DateTime 'this' is strictly before date/time 'that'.", :protocol cljs-time.core/DateTimeProtocol, :end-column 11, :end-line 98, :column 4, :line 98, :file "/Users/fabian/Code/go/src/github.com/fuzzyants/wikingo/app/resources/public/js/compiled/out/cljs_time/core.cljs"}, :protocol cljs-time.core/DateTimeProtocol, :name cljs-time.core/before?, :variadic false, :file "resources/public/js/compiled/out/cljs_time/core.cljs", :end-column 11, :method-params ([this that]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 86, :end-line 98, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this that])), :doc "Returns true if DateTime 'this' is strictly before date/time 'that'.", :test true}, month-range {:protocol-inline nil, :meta {:arglists (quote ([{:keys [start end]}])), :private true, :end-column 19, :end-line 525, :column 8, :line 525, :file "/Users/fabian/Code/go/src/github.com/fuzzyants/wikingo/app/resources/public/js/compiled/out/cljs_time/core.cljs"}, :private true, :name cljs-time.core/month-range, :variadic false, :file "resources/public/js/compiled/out/cljs_time/core.cljs", :end-column 19, :method-params ([p__29836]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 525, :end-line 525, :max-fixed-arity 1, :fn-var true, :arglists (quote ([{:keys [start end]}])), :test true}, latest {:protocol-inline nil, :meta {:top-fn {:variadic false, :max-fixed-arity 2, :method-params ([dt1 dt2] [dts]), :arglists ([dt1 dt2] [dts]), :arglists-meta (nil nil)}, :arglists (quote ([dt1 dt2] [dts])), :doc "Returns the latest of the supplied DateTimes", :end-column 13, :end-line 502, :column 7, :line 502, :file "/Users/fabian/Code/go/src/github.com/fuzzyants/wikingo/app/resources/public/js/compiled/out/cljs_time/core.cljs"}, :name cljs-time.core/latest, :variadic false, :file "resources/public/js/compiled/out/cljs_time/core.cljs", :end-column 13, :top-fn {:variadic false, :max-fixed-arity 2, :method-params ([dt1 dt2] [dts]), :arglists ([dt1 dt2] [dts]), :arglists-meta (nil nil)}, :method-params ([dt1 dt2] [dts]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 502, :end-line 502, :max-fixed-arity 2, :fn-var true, :arglists ([dt1 dt2] [dts]), :doc "Returns the latest of the supplied DateTimes", :test true}, hours? {:protocol-inline nil, :meta {:arglists (quote ([val])), :doc "Returns true if the given value is an instance of Hours", :end-column 13, :end-line 678, :column 7, :line 678, :file "/Users/fabian/Code/go/src/github.com/fuzzyants/wikingo/app/resources/public/js/compiled/out/cljs_time/core.cljs"}, :name cljs-time.core/hours?, :variadic false, :file "resources/public/js/compiled/out/cljs_time/core.cljs", :end-column 13, :method-params ([val]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 678, :end-line 678, :max-fixed-arity 1, :fn-var true, :arglists (quote ([val])), :doc "Returns true if the given value is an instance of Hours", :test true}, Interval {:num-fields 2, :protocols #{cljs.core/IRecord cljs.core/IEquiv cljs.core/IHash cljs.core/ICollection cljs.core/ICounted cljs.core/ISeqable cljs.core/IMeta cljs.core/ICloneable cljs.core/IPrintWithWriter cljs.core/IWithMeta cljs.core/IAssociative cljs.core/IMap cljs.core/ILookup}, :name cljs-time.core/Interval, :file "resources/public/js/compiled/out/cljs_time/core.cljs", :end-column 20, :type true, :column 12, :internal-ctor true, :line 115, :record true, :end-line 115, :skip-protocol-flag #{cljs.core/IRecord cljs.core/IEquiv cljs.core/IHash cljs.core/ICollection cljs.core/ICounted cljs.core/ISeqable cljs.core/IMeta cljs.core/ICloneable cljs.core/IPrintWithWriter cljs.core/IWithMeta cljs.core/IAssociative cljs.core/IMap cljs.core/ILookup}}, year {:protocol-inline nil, :meta {:arglists (quote ([this])), :doc "Return the year component of the given date/time.", :protocol cljs-time.core/DateTimeProtocol, :end-column 8, :end-line 88, :column 4, :line 88, :file "/Users/fabian/Code/go/src/github.com/fuzzyants/wikingo/app/resources/public/js/compiled/out/cljs_time/core.cljs"}, :protocol cljs-time.core/DateTimeProtocol, :name cljs-time.core/year, :variadic false, :file "resources/public/js/compiled/out/cljs_time/core.cljs", :end-column 8, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 86, :end-line 88, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Return the year component of the given date/time.", :test true}, earliest {:protocol-inline nil, :meta {:top-fn {:variadic false, :max-fixed-arity 2, :method-params ([dt1 dt2] [dts]), :arglists ([dt1 dt2] [dts]), :arglists-meta (nil nil)}, :arglists (quote ([dt1 dt2] [dts])), :doc "Returns the earliest of the supplied DateTimes", :end-column 15, :end-line 495, :column 7, :line 495, :file "/Users/fabian/Code/go/src/github.com/fuzzyants/wikingo/app/resources/public/js/compiled/out/cljs_time/core.cljs"}, :name cljs-time.core/earliest, :variadic false, :file "resources/public/js/compiled/out/cljs_time/core.cljs", :end-column 15, :top-fn {:variadic false, :max-fixed-arity 2, :method-params ([dt1 dt2] [dts]), :arglists ([dt1 dt2] [dts]), :arglists-meta (nil nil)}, :method-params ([dt1 dt2] [dts]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 495, :end-line 495, :max-fixed-arity 2, :fn-var true, :arglists ([dt1 dt2] [dts]), :doc "Returns the earliest of the supplied DateTimes", :test true}, period-fn {:protocol-inline nil, :meta {:arglists (quote ([p])), :end-column 16, :end-line 175, :column 7, :line 175, :file "/Users/fabian/Code/go/src/github.com/fuzzyants/wikingo/app/resources/public/js/compiled/out/cljs_time/core.cljs"}, :name cljs-time.core/period-fn, :variadic false, :file "resources/public/js/compiled/out/cljs_time/core.cljs", :end-column 16, :method-params ([p]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 175, :end-line 175, :max-fixed-arity 1, :fn-var true, :arglists (quote ([p])), :test true}, static-ms-fn {:protocol-inline nil, :meta {:arglists (quote ([ms])), :end-column 19, :end-line 253, :column 7, :line 253, :file "/Users/fabian/Code/go/src/github.com/fuzzyants/wikingo/app/resources/public/js/compiled/out/cljs_time/core.cljs"}, :name cljs-time.core/static-ms-fn, :variadic false, :file "resources/public/js/compiled/out/cljs_time/core.cljs", :end-column 19, :method-params ([ms]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 253, :end-line 253, :max-fixed-arity 1, :fn-var true, :arglists (quote ([ms])), :test true}, period? {:protocol-inline nil, :meta {:arglists (quote ([x])), :end-column 14, :end-line 652, :column 7, :line 652, :file "/Users/fabian/Code/go/src/github.com/fuzzyants/wikingo/app/resources/public/js/compiled/out/cljs_time/core.cljs"}, :name cljs-time.core/period?, :variadic false, :file "resources/public/js/compiled/out/cljs_time/core.cljs", :end-column 14, :method-params ([x]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 652, :end-line 652, :max-fixed-arity 1, :fn-var true, :arglists (quote ([x])), :test true}, yesterday {:protocol-inline nil, :meta {:arglists (quote ([])), :doc "Returns a DateTime for yesterday relative to now", :end-column 16, :end-line 484, :column 7, :line 484, :file "/Users/fabian/Code/go/src/github.com/fuzzyants/wikingo/app/resources/public/js/compiled/out/cljs_time/core.cljs"}, :name cljs-time.core/yesterday, :variadic false, :file "resources/public/js/compiled/out/cljs_time/core.cljs", :end-column 16, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 484, :end-line 484, :max-fixed-arity 0, :fn-var true, :arglists (quote ([])), :doc "Returns a DateTime for yesterday relative to now", :test true}, minutes? {:protocol-inline nil, :meta {:arglists (quote ([val])), :doc "Returns true if the given value is an instance of Minutes", :end-column 15, :end-line 683, :column 7, :line 683, :file "/Users/fabian/Code/go/src/github.com/fuzzyants/wikingo/app/resources/public/js/compiled/out/cljs_time/core.cljs"}, :name cljs-time.core/minutes?, :variadic false, :file "resources/public/js/compiled/out/cljs_time/core.cljs", :end-column 15, :method-params ([val]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 683, :end-line 683, :max-fixed-arity 1, :fn-var true, :arglists (quote ([val])), :doc "Returns true if the given value is an instance of Minutes", :test true}, today-at {:protocol-inline nil, :meta {:top-fn {:variadic false, :max-fixed-arity 4, :method-params ([hours minutes seconds millis] [hours minutes seconds] [hours minutes]), :arglists ([hours minutes seconds millis] [hours minutes seconds] [hours minutes]), :arglists-meta (nil nil nil)}, :arglists (quote ([hours minutes seconds millis] [hours minutes seconds] [hours minutes])), :end-column 15, :end-line 746, :column 7, :line 746, :file "/Users/fabian/Code/go/src/github.com/fuzzyants/wikingo/app/resources/public/js/compiled/out/cljs_time/core.cljs"}, :name cljs-time.core/today-at, :variadic false, :file "resources/public/js/compiled/out/cljs_time/core.cljs", :end-column 15, :top-fn {:variadic false, :max-fixed-arity 4, :method-params ([hours minutes seconds millis] [hours minutes seconds] [hours minutes]), :arglists ([hours minutes seconds millis] [hours minutes seconds] [hours minutes]), :arglists-meta (nil nil nil)}, :method-params ([hours minutes seconds millis] [hours minutes seconds] [hours minutes]), :protocol-impl nil, :arglists-meta (nil nil nil), :column 1, :line 746, :end-line 746, :max-fixed-arity 4, :fn-var true, :arglists ([hours minutes seconds millis] [hours minutes seconds] [hours minutes]), :test true}, Period {:num-fields 8, :protocols #{cljs.core/IRecord cljs.core/IEquiv cljs.core/IHash cljs.core/ICollection cljs.core/ICounted cljs.core/ISeqable cljs.core/IMeta cljs.core/ICloneable cljs.core/IPrintWithWriter cljs.core/IWithMeta cljs.core/IAssociative cljs.core/IMap cljs.core/ILookup}, :name cljs-time.core/Period, :file "resources/public/js/compiled/out/cljs_time/core.cljs", :end-column 18, :type true, :column 12, :internal-ctor true, :line 124, :record true, :end-line 124, :skip-protocol-flag #{cljs.core/IRecord cljs.core/IEquiv cljs.core/IHash cljs.core/ICollection cljs.core/ICounted cljs.core/ISeqable cljs.core/IMeta cljs.core/ICloneable cljs.core/IPrintWithWriter cljs.core/IWithMeta cljs.core/IAssociative cljs.core/IMap cljs.core/ILookup}}, local-date {:protocol-inline nil, :meta {:arglists (quote ([year month day])), :doc "Constructs and returns a new local DateTime.\nSpecify the year, month, and day. Does not deal with timezones.", :end-column 17, :end-line 347, :column 7, :line 347, :file "/Users/fabian/Code/go/src/github.com/fuzzyants/wikingo/app/resources/public/js/compiled/out/cljs_time/core.cljs"}, :name cljs-time.core/local-date, :variadic false, :file "resources/public/js/compiled/out/cljs_time/core.cljs", :end-column 17, :method-params ([year month day]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 347, :end-line 347, :max-fixed-arity 3, :fn-var true, :arglists (quote ([year month day])), :doc "Constructs and returns a new local DateTime.\nSpecify the year, month, and day. Does not deal with timezones.", :test true}, plus {:protocol-inline nil, :meta {:top-fn {:variadic true, :max-fixed-arity 2, :method-params ([dt p]), :arglists ([dt p] [dt p & ps]), :arglists-meta (nil nil)}, :arglists (quote ([dt p] [dt p & ps])), :doc "Returns a new date/time corresponding to the given date/time moved\n  forwards by the given Period(s).", :end-column 11, :end-line 461, :column 7, :line 461, :file "/Users/fabian/Code/go/src/github.com/fuzzyants/wikingo/app/resources/public/js/compiled/out/cljs_time/core.cljs"}, :name cljs-time.core/plus, :variadic true, :file "resources/public/js/compiled/out/cljs_time/core.cljs", :end-column 11, :top-fn {:variadic true, :max-fixed-arity 2, :method-params ([dt p]), :arglists ([dt p] [dt p & ps]), :arglists-meta (nil nil)}, :method-params ([dt p]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 461, :end-line 461, :max-fixed-arity 2, :fn-var true, :arglists ([dt p] [dt p & ps]), :doc "Returns a new date/time corresponding to the given date/time moved\n  forwards by the given Period(s).", :test true}, minus- {:protocol-inline nil, :meta {:arglists (quote ([this period])), :doc "Returns a new date/time corresponding to the given date/time moved backwards by the given Period(s).", :protocol cljs-time.core/DateTimeProtocol, :end-column 10, :end-line 100, :column 4, :line 100, :file "/Users/fabian/Code/go/src/github.com/fuzzyants/wikingo/app/resources/public/js/compiled/out/cljs_time/core.cljs"}, :protocol cljs-time.core/DateTimeProtocol, :name cljs-time.core/minus-, :variadic false, :file "resources/public/js/compiled/out/cljs_time/core.cljs", :end-column 10, :method-params ([this period]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 86, :end-line 100, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this period])), :doc "Returns a new date/time corresponding to the given date/time moved backwards by the given Period(s).", :test true}, weeks? {:protocol-inline nil, :meta {:arglists (quote ([val])), :doc "Returns true if the given value is an instance of Weeks", :end-column 13, :end-line 668, :column 7, :line 668, :file "/Users/fabian/Code/go/src/github.com/fuzzyants/wikingo/app/resources/public/js/compiled/out/cljs_time/core.cljs"}, :name cljs-time.core/weeks?, :variadic false, :file "resources/public/js/compiled/out/cljs_time/core.cljs", :end-column 13, :method-params ([val]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 668, :end-line 668, :max-fixed-arity 1, :fn-var true, :arglists (quote ([val])), :doc "Returns true if the given value is an instance of Weeks", :test true}, abuts? {:protocol-inline nil, :meta {:arglists (quote ([{start-a :start, end-a :end} {start-b :start, end-b :end}])), :doc "Returns true if Interval a abuts b, i.e. then end of a is exactly the\n  beginning of b.", :end-column 13, :end-line 640, :column 7, :line 640, :file "/Users/fabian/Code/go/src/github.com/fuzzyants/wikingo/app/resources/public/js/compiled/out/cljs_time/core.cljs"}, :name cljs-time.core/abuts?, :variadic false, :file "resources/public/js/compiled/out/cljs_time/core.cljs", :end-column 13, :method-params ([p__29870 p__29871]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 640, :end-line 640, :max-fixed-arity 2, :fn-var true, :arglists (quote ([{start-a :start, end-a :end} {start-b :start, end-b :end}])), :doc "Returns true if Interval a abuts b, i.e. then end of a is exactly the\n  beginning of b.", :test true}, sec {:protocol-inline nil, :meta {:arglists (quote ([this])), :doc "Return the second of minute component of the given date/time.", :protocol cljs-time.core/DateTimeProtocol, :end-column 7, :end-line 94, :column 4, :line 94, :file "/Users/fabian/Code/go/src/github.com/fuzzyants/wikingo/app/resources/public/js/compiled/out/cljs_time/core.cljs"}, :protocol cljs-time.core/DateTimeProtocol, :name cljs-time.core/sec, :variadic false, :file "resources/public/js/compiled/out/cljs_time/core.cljs", :end-column 7, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 86, :end-line 94, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Return the second of minute component of the given date/time.", :test true}, hours {:protocol-inline nil, :meta {:top-fn {:variadic false, :max-fixed-arity 1, :method-params ([] [n]), :arglists ([] [n]), :arglists-meta (nil nil)}, :arglists (quote ([] [n])), :doc "Given a number, returns a Period representing that many hours.\n  Without an argument, returns a Period representing only hours.", :end-column 12, :end-line 437, :column 7, :line 437, :file "/Users/fabian/Code/go/src/github.com/fuzzyants/wikingo/app/resources/public/js/compiled/out/cljs_time/core.cljs"}, :name cljs-time.core/hours, :variadic false, :file "resources/public/js/compiled/out/cljs_time/core.cljs", :end-column 12, :top-fn {:variadic false, :max-fixed-arity 1, :method-params ([] [n]), :arglists ([] [n]), :arglists-meta (nil nil)}, :method-params ([] [n]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 437, :end-line 437, :max-fixed-arity 1, :fn-var true, :arglists ([] [n]), :doc "Given a number, returns a Period representing that many hours.\n  Without an argument, returns a Period representing only hours.", :test true}, years {:protocol-inline nil, :meta {:top-fn {:variadic false, :max-fixed-arity 1, :method-params ([] [n]), :arglists ([] [n]), :arglists-meta (nil nil)}, :arglists (quote ([] [n])), :doc "Given a number, returns a Period representing that many years.\n  Without an argument, returns a Period representing only years.", :end-column 12, :end-line 413, :column 7, :line 413, :file "/Users/fabian/Code/go/src/github.com/fuzzyants/wikingo/app/resources/public/js/compiled/out/cljs_time/core.cljs"}, :name cljs-time.core/years, :variadic false, :file "resources/public/js/compiled/out/cljs_time/core.cljs", :end-column 12, :top-fn {:variadic false, :max-fixed-arity 1, :method-params ([] [n]), :arglists ([] [n]), :arglists-meta (nil nil)}, :method-params ([] [n]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 413, :end-line 413, :max-fixed-arity 1, :fn-var true, :arglists ([] [n]), :doc "Given a number, returns a Period representing that many years.\n  Without an argument, returns a Period representing only years.", :test true}, first-day-of-the-month- {:protocol-inline nil, :meta {:arglists (quote ([this])), :doc "Returns the first day of the month", :protocol cljs-time.core/DateTimeProtocol, :end-column 27, :end-line 101, :column 4, :line 101, :file "/Users/fabian/Code/go/src/github.com/fuzzyants/wikingo/app/resources/public/js/compiled/out/cljs_time/core.cljs"}, :protocol cljs-time.core/DateTimeProtocol, :name cljs-time.core/first-day-of-the-month-, :variadic false, :file "resources/public/js/compiled/out/cljs_time/core.cljs", :end-column 27, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 86, :end-line 101, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Returns the first day of the month", :test true}, in-millis {:protocol-inline nil, :meta {:arglists (quote ([this])), :doc "Return the time in milliseconds.", :protocol cljs-time.core/InTimeUnitProtocol, :end-column 13, :end-line 106, :column 4, :line 106, :file "/Users/fabian/Code/go/src/github.com/fuzzyants/wikingo/app/resources/public/js/compiled/out/cljs_time/core.cljs"}, :protocol cljs-time.core/InTimeUnitProtocol, :name cljs-time.core/in-millis, :variadic false, :file "resources/public/js/compiled/out/cljs_time/core.cljs", :end-column 13, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 104, :end-line 106, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Return the time in milliseconds.", :test true}, milli {:protocol-inline nil, :meta {:arglists (quote ([this])), :doc "Return the millisecond of second component of the given date/time.", :protocol cljs-time.core/DateTimeProtocol, :end-column 9, :end-line 96, :column 4, :line 96, :file "/Users/fabian/Code/go/src/github.com/fuzzyants/wikingo/app/resources/public/js/compiled/out/cljs_time/core.cljs"}, :protocol cljs-time.core/DateTimeProtocol, :name cljs-time.core/milli, :variadic false, :file "resources/public/js/compiled/out/cljs_time/core.cljs", :end-column 9, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 86, :end-line 96, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Return the millisecond of second component of the given date/time.", :test true}}, :require-macros nil, :cljs.analyzer/constants {:order [:start :end :years :months :weeks :days :hours :minutes :seconds :millis :else :id :std_offset :names :transitions :- :+ :offset :rules :type :cljs-time.core/time-zone :else-is-same-date :unsupported-operation :default :hierarchy], :seen #{:else :transitions :offset :default :- :start :months :days :type :seconds :rules :+ :id :std_offset :hours :years :unsupported-operation :cljs-time.core/time-zone :minutes :end :hierarchy :weeks :else-is-same-date :millis :names}}, :doc "### The core namespace for date-time operations in the cljs-time library.\n\n  Create a DateTime instance with date-time (or a local DateTime instance with local-date-time),\n  specifying the year, month, day, hour, minute, second, and millisecond:\n\n    => (date-time 1986 10 14 4 3 27 456)\n    #<DateTime 1986-10-14T04:03:27.456Z>\n\n    => (local-date-time 1986 10 14 4 3 27 456)\n    #<DateTime 1986-10-14T04:03:27.456>\n\n  Less-significant fields can be omitted:\n\n    => (date-time 1986 10 14)\n    #<DateTime 1986-10-14T00:00:00.000Z>\n\n    => (local-date-time 1986 10 14)\n    #<DateTime 1986-10-14T00:00:00.000>\n\n  Get the current time with (now) and the start of the Unix epoch with (epoch).\n\n  Once you have a date-time, use accessors like hour and second to access the\n  corresponding fields:\n\n    => (hour (date-time 1986 10 14 22))\n    22\n\n    => (hour (local-date-time 1986 10 14 22))\n    22\n\n  The functions after? and before? determine the relative position of two\n  DateTime instances:\n\n    => (after? (date-time 1986 10) (date-time 1986 9))\n    true\n\n    => (after? (local-date-time 1986 10) (local-date-time 1986 9))\n    true\n\n  Often you will want to find a date some amount of time from a given date. For\n  example, to find the time 1 month and 3 weeks from a given date-time:\n\n    => (plus (date-time 1986 10 14) (months 1) (weeks 3))\n    #<DateTime 1986-12-05T00:00:00.000Z>\n\n    => (plus (local-date-time 1986 10 14) (months 1) (weeks 3))\n    #<DateTime 1986-12-05T00:00:00.000Z>\n\n  An Interval is used to represent the span of time between two DateTime\n  instances. Construct one using interval, then query them using within?,\n  overlaps?, and abuts?\n\n    => (within? (interval (date-time 1986) (date-time 1990)) (date-time 1987))\n    true\n\n  To find the amount of time encompased by an interval, use in-seconds and\n  in-minutes:\n\n    => (in-minutes (interval (date-time 1986 10 2) (date-time 1986 10 14)))\n    17280\n\n  Note that all functions in this namespace work with Joda objects or ints. If\n  you need to print or parse date-times, see cljs-time.format. If you need to\n  ceorce date-times to or from other types, see cljs-time.coerce."}