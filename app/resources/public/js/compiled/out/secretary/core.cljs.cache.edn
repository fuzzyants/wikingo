;; Analyzed by ClojureScript 0.0-3211
{:use-macros {defroute secretary.core}, :excludes #{}, :name secretary.core, :imports nil, :requires {clojure.walk clojure.walk, clojure.string clojure.string, string clojure.string}, :uses {keywordize-keys clojure.walk}, :defs {IRouteValue {:meta {:protocol-info {:methods {route-value [[this]]}}, :protocol-symbol true, :doc nil, :end-column 25, :end-line 12, :column 14, :line 12, :file "/Users/fabian/Code/go/src/github.com/fuzzyants/wikingo/app/resources/public/js/compiled/out/secretary/core.cljs"}, :protocol-symbol true, :name secretary.core/IRouteValue, :file "resources/public/js/compiled/out/secretary/core.cljs", :end-column 25, :column 1, :line 12, :protocol-info {:methods {route-value [[this]]}}, :info nil, :end-line 12, :impls #{js/RegExp secretary.core/t26295 cljs.core/PersistentVector secretary.core/t26300 string}, :doc nil, :test true}, encode {:meta {:end-column 12, :end-line 41, :column 6, :line 41, :file "/Users/fabian/Code/go/src/github.com/fuzzyants/wikingo/app/resources/public/js/compiled/out/secretary/core.cljs"}, :file "resources/public/js/compiled/out/secretary/core.cljs", :line 41, :column 1, :end-line 41, :end-column 12, :test true, :name secretary.core/encode}, lex-route {:protocol-inline nil, :meta {:arglists (quote ([s clauses])), :doc "Return a pair of [regex params]. regex is a compiled regular\n  expression for matching routes. params is a list of route param\n  names (:*, :id, etc.). ", :private true, :end-column 17, :end-line 212, :column 8, :line 212, :file "/Users/fabian/Code/go/src/github.com/fuzzyants/wikingo/app/resources/public/js/compiled/out/secretary/core.cljs"}, :private true, :name secretary.core/lex-route, :variadic false, :file "resources/public/js/compiled/out/secretary/core.cljs", :end-column 17, :method-params ([s clauses]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 212, :end-line 212, :max-fixed-arity 2, :fn-var true, :arglists (quote ([s clauses])), :doc "Return a pair of [regex params]. regex is a compiled regular\n  expression for matching routes. params is a list of route param\n  names (:*, :id, etc.). ", :test true}, encode-query-params {:protocol-inline nil, :meta {:arglists (quote ([query-params])), :doc "Convert a map of query parameters into url encoded string.", :end-column 26, :end-line 79, :column 7, :line 79, :file "/Users/fabian/Code/go/src/github.com/fuzzyants/wikingo/app/resources/public/js/compiled/out/secretary/core.cljs"}, :name secretary.core/encode-query-params, :variadic false, :file "resources/public/js/compiled/out/secretary/core.cljs", :end-column 26, :method-params ([query-params]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 79, :end-line 79, :max-fixed-arity 1, :fn-var true, :arglists (quote ([query-params])), :doc "Convert a map of query parameters into url encoded string.", :test true}, params-valid? {:protocol-inline nil, :meta {:arglists (quote ([params validations])), :private true, :end-column 21, :end-line 334, :column 8, :line 334, :file "/Users/fabian/Code/go/src/github.com/fuzzyants/wikingo/app/resources/public/js/compiled/out/secretary/core.cljs"}, :private true, :name secretary.core/params-valid?, :variadic false, :file "resources/public/js/compiled/out/secretary/core.cljs", :end-column 21, :method-params ([params validations]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 334, :end-line 334, :max-fixed-arity 2, :fn-var true, :arglists (quote ([params validations])), :test true}, route-matches {:protocol-inline nil, :meta {:arglists (quote ([this route])), :doc nil, :protocol secretary.core/IRouteMatches, :end-column 17, :end-line 10, :column 4, :line 10, :file "/Users/fabian/Code/go/src/github.com/fuzzyants/wikingo/app/resources/public/js/compiled/out/secretary/core.cljs"}, :protocol secretary.core/IRouteMatches, :name secretary.core/route-matches, :variadic false, :file "resources/public/js/compiled/out/secretary/core.cljs", :end-column 17, :method-params ([this route]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 9, :end-line 10, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this route])), :doc nil, :test true}, uri-without-prefix {:protocol-inline nil, :meta {:arglists (quote ([uri])), :private true, :end-column 26, :end-line 303, :column 8, :line 303, :file "/Users/fabian/Code/go/src/github.com/fuzzyants/wikingo/app/resources/public/js/compiled/out/secretary/core.cljs"}, :private true, :name secretary.core/uri-without-prefix, :variadic false, :file "resources/public/js/compiled/out/secretary/core.cljs", :end-column 26, :method-params ([uri]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 303, :end-line 303, :max-fixed-arity 1, :fn-var true, :arglists (quote ([uri])), :test true}, *config* {:meta {:dynamic true, :end-column 24, :end-line 23, :column 16, :line 23, :file "/Users/fabian/Code/go/src/github.com/fuzzyants/wikingo/app/resources/public/js/compiled/out/secretary/core.cljs"}, :file "resources/public/js/compiled/out/secretary/core.cljs", :line 23, :column 1, :end-line 23, :end-column 24, :dynamic true, :test true, :name secretary.core/*config*}, route-value {:protocol-inline nil, :meta {:arglists (quote ([this])), :doc nil, :protocol secretary.core/IRouteValue, :end-column 15, :end-line 13, :column 4, :line 13, :file "/Users/fabian/Code/go/src/github.com/fuzzyants/wikingo/app/resources/public/js/compiled/out/secretary/core.cljs"}, :protocol secretary.core/IRouteValue, :name secretary.core/route-value, :variadic false, :file "resources/public/js/compiled/out/secretary/core.cljs", :end-column 15, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 12, :end-line 13, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc nil, :test true}, decode {:meta {:end-column 12, :end-line 94, :column 6, :line 94, :file "/Users/fabian/Code/go/src/github.com/fuzzyants/wikingo/app/resources/public/js/compiled/out/secretary/core.cljs"}, :file "resources/public/js/compiled/out/secretary/core.cljs", :line 94, :column 1, :end-line 94, :end-column 12, :test true, :name secretary.core/decode}, dispatch! {:protocol-inline nil, :meta {:arglists (quote ([uri])), :doc "Dispatch an action for a given route if it matches the URI path.", :end-column 16, :end-line 314, :column 7, :line 314, :file "/Users/fabian/Code/go/src/github.com/fuzzyants/wikingo/app/resources/public/js/compiled/out/secretary/core.cljs"}, :name secretary.core/dispatch!, :variadic false, :file "resources/public/js/compiled/out/secretary/core.cljs", :end-column 16, :method-params ([uri]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 314, :end-line 314, :max-fixed-arity 1, :fn-var true, :arglists (quote ([uri])), :doc "Dispatch an action for a given route if it matches the URI path.", :test true}, locate-route {:protocol-inline nil, :meta {:arglists (quote ([route])), :end-column 19, :end-line 287, :column 7, :line 287, :file "/Users/fabian/Code/go/src/github.com/fuzzyants/wikingo/app/resources/public/js/compiled/out/secretary/core.cljs"}, :name secretary.core/locate-route, :variadic false, :file "resources/public/js/compiled/out/secretary/core.cljs", :end-column 19, :method-params ([route]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 287, :end-line 287, :max-fixed-arity 1, :fn-var true, :arglists (quote ([route])), :test true}, re-escape-chars {:meta {:private true, :end-column 31, :end-line 187, :column 16, :line 187, :file "/Users/fabian/Code/go/src/github.com/fuzzyants/wikingo/app/resources/public/js/compiled/out/secretary/core.cljs"}, :file "resources/public/js/compiled/out/secretary/core.cljs", :line 187, :column 1, :end-line 187, :end-column 31, :private true, :test true, :name secretary.core/re-escape-chars}, t26300 {:num-fields 7, :protocols #{secretary.core/IRouteValue cljs.core/IMeta cljs.core/IWithMeta secretary.core/IRouteMatches}, :name secretary.core/t26300, :file "resources/public/js/compiled/out/secretary/core.cljs", :type true, :anonymous true, :column 4, :line 243, :record false, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, assoc-in-query-params {:protocol-inline nil, :meta {:arglists (quote ([m path v])), :doc "Like assoc-in but numbers in path create vectors instead of maps.\n\n  Ex.\n\n    (assoc-in-query-params {} [\"foo\" 0] 1)\n    ;; => {\"foo\" [1]}\n\n    (assoc-in-query-params {} [\"foo\" 0 \"a\"] 1)\n    ;; => {\"foo\" [{\"a\" 1}]}\n  ", :private true, :end-column 29, :end-line 125, :column 8, :line 125, :file "/Users/fabian/Code/go/src/github.com/fuzzyants/wikingo/app/resources/public/js/compiled/out/secretary/core.cljs"}, :private true, :name secretary.core/assoc-in-query-params, :variadic false, :file "resources/public/js/compiled/out/secretary/core.cljs", :end-column 29, :method-params ([m path v]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 125, :end-line 125, :max-fixed-arity 3, :fn-var true, :arglists (quote ([m path v])), :doc "Like assoc-in but numbers in path create vectors instead of maps.\n\n  Ex.\n\n    (assoc-in-query-params {} [\"foo\" 0] 1)\n    ;; => {\"foo\" [1]}\n\n    (assoc-in-query-params {} [\"foo\" 0 \"a\"] 1)\n    ;; => {\"foo\" [{\"a\" 1}]}\n  ", :test true}, render-route* {:protocol-inline nil, :meta {:top-fn {:variadic true, :max-fixed-arity 1, :method-params [(obj args)], :arglists [[obj & args]], :arglists-meta (nil)}, :arglists (quote ([obj & args])), :internal true, :end-column 31, :end-line 257, :column 18, :line 257, :file "/Users/fabian/Code/go/src/github.com/fuzzyants/wikingo/app/resources/public/js/compiled/out/secretary/core.cljs"}, :name secretary.core/render-route*, :variadic true, :file "resources/public/js/compiled/out/secretary/core.cljs", :end-column 31, :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(obj args)], :arglists [[obj & args]], :arglists-meta (nil)}, :method-params [(obj args)], :protocol-impl nil, :arglists-meta (nil), :column 1, :internal true, :line 257, :end-line 257, :max-fixed-arity 1, :fn-var true, :arglists [[obj & args]], :test true}, get-config {:protocol-inline nil, :meta {:arglists (quote ([path])), :doc "Gets a value for *config* at path.", :end-column 17, :end-line 26, :column 7, :line 26, :file "/Users/fabian/Code/go/src/github.com/fuzzyants/wikingo/app/resources/public/js/compiled/out/secretary/core.cljs"}, :name secretary.core/get-config, :variadic false, :file "resources/public/js/compiled/out/secretary/core.cljs", :end-column 17, :method-params ([path]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 26, :end-line 26, :max-fixed-arity 1, :fn-var true, :arglists (quote ([path])), :doc "Gets a value for *config* at path.", :test true}, add-route! {:protocol-inline nil, :meta {:arglists (quote ([obj action])), :end-column 17, :end-line 267, :column 7, :line 267, :file "/Users/fabian/Code/go/src/github.com/fuzzyants/wikingo/app/resources/public/js/compiled/out/secretary/core.cljs"}, :name secretary.core/add-route!, :variadic false, :file "resources/public/js/compiled/out/secretary/core.cljs", :end-column 17, :method-params ([obj action]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 267, :end-line 267, :max-fixed-arity 2, :fn-var true, :arglists (quote ([obj action])), :test true}, render-route {:protocol-inline nil, :meta {:top-fn {:variadic false, :max-fixed-arity 2, :method-params ([this] [this params]), :arglists ([this] [this params]), :arglists-meta (nil nil)}, :arglists (quote ([this] [this params])), :doc nil, :protocol secretary.core/IRenderRoute, :end-column 16, :end-line 16, :column 4, :line 16, :file "/Users/fabian/Code/go/src/github.com/fuzzyants/wikingo/app/resources/public/js/compiled/out/secretary/core.cljs"}, :protocol secretary.core/IRenderRoute, :name secretary.core/render-route, :variadic false, :file "resources/public/js/compiled/out/secretary/core.cljs", :end-column 16, :top-fn {:variadic false, :max-fixed-arity 2, :method-params ([this] [this params]), :arglists ([this] [this params]), :arglists-meta (nil nil)}, :method-params ([this] [this params]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 15, :end-line 16, :max-fixed-arity 2, :fn-var true, :arglists ([this] [this params]), :doc nil, :test true}, locate-route-value {:protocol-inline nil, :meta {:arglists (quote ([uri])), :doc "Returns original route value as set in defroute when passed a URI path.", :end-column 25, :end-line 294, :column 7, :line 294, :file "/Users/fabian/Code/go/src/github.com/fuzzyants/wikingo/app/resources/public/js/compiled/out/secretary/core.cljs"}, :name secretary.core/locate-route-value, :variadic false, :file "resources/public/js/compiled/out/secretary/core.cljs", :end-column 25, :method-params ([uri]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 294, :end-line 294, :max-fixed-arity 1, :fn-var true, :arglists (quote ([uri])), :doc "Returns original route value as set in defroute when passed a URI path.", :test true}, ->t26295 {:protocol-inline nil, :meta {:file nil, :arglists (quote ([params re vec__26294 clauses orig-route compile-route meta26296])), :factory :positional, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :protocols #{secretary.core/IRouteValue cljs.core/IMeta cljs.core/IWithMeta secretary.core/IRouteMatches}, :anonymous true}, :protocols #{secretary.core/IRouteValue cljs.core/IMeta cljs.core/IWithMeta secretary.core/IRouteMatches}, :name secretary.core/->t26295, :variadic false, :file "resources/public/js/compiled/out/secretary/core.cljs", :method-params ([params re vec__26294 clauses orig-route compile-route meta26296]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 4, :factory :positional, :line 243, :max-fixed-arity 7, :fn-var true, :arglists (quote ([params re vec__26294 clauses orig-route compile-route meta26296])), :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :test true}, encode-uri {:protocol-inline nil, :meta {:arglists (quote ([uri])), :doc "Like js/encodeURIComponent excepts ignore slashes.", :end-column 17, :end-line 84, :column 7, :line 84, :file "/Users/fabian/Code/go/src/github.com/fuzzyants/wikingo/app/resources/public/js/compiled/out/secretary/core.cljs"}, :name secretary.core/encode-uri, :variadic false, :file "resources/public/js/compiled/out/secretary/core.cljs", :end-column 17, :method-params ([uri]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 84, :end-line 84, :max-fixed-arity 1, :fn-var true, :arglists (quote ([uri])), :doc "Like js/encodeURIComponent excepts ignore slashes.", :test true}, parse-path {:protocol-inline nil, :meta {:arglists (quote ([path])), :doc "Parse a value from a serialized query-string key index. If the\n  index value is empty 0 is returned, if it's a digit it returns the\n  js/parseInt value, otherwise it returns the extracted index.", :private true, :end-column 18, :end-line 96, :column 8, :line 96, :file "/Users/fabian/Code/go/src/github.com/fuzzyants/wikingo/app/resources/public/js/compiled/out/secretary/core.cljs"}, :private true, :name secretary.core/parse-path, :variadic false, :file "resources/public/js/compiled/out/secretary/core.cljs", :end-column 18, :method-params ([path]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 96, :end-line 96, :max-fixed-arity 1, :fn-var true, :arglists (quote ([path])), :doc "Parse a value from a serialized query-string key index. If the\n  index value is empty 0 is returned, if it's a digit it returns the\n  js/parseInt value, otherwise it returns the extracted index.", :test true}, set-config! {:protocol-inline nil, :meta {:arglists (quote ([path val])), :doc "Associates a value val for *config* at path.", :end-column 18, :end-line 32, :column 7, :line 32, :file "/Users/fabian/Code/go/src/github.com/fuzzyants/wikingo/app/resources/public/js/compiled/out/secretary/core.cljs"}, :name secretary.core/set-config!, :variadic false, :file "resources/public/js/compiled/out/secretary/core.cljs", :end-column 18, :method-params ([path val]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 32, :end-line 32, :max-fixed-arity 2, :fn-var true, :arglists (quote ([path val])), :doc "Associates a value val for *config* at path.", :test true}, key-parse {:protocol-inline nil, :meta {:arglists (quote ([k])), :doc "Return a key path for a serialized query-string entry.\n\n  Ex.\n\n    (key-parse \"foo[][a][][b]\")\n    ;; => (\"foo\" 0 \"a\" 0 \"b\")\n  ", :private true, :end-column 17, :end-line 111, :column 8, :line 111, :file "/Users/fabian/Code/go/src/github.com/fuzzyants/wikingo/app/resources/public/js/compiled/out/secretary/core.cljs"}, :private true, :name secretary.core/key-parse, :variadic false, :file "resources/public/js/compiled/out/secretary/core.cljs", :end-column 17, :method-params ([k]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 111, :end-line 111, :max-fixed-arity 1, :fn-var true, :arglists (quote ([k])), :doc "Return a key path for a serialized query-string entry.\n\n  Ex.\n\n    (key-parse \"foo[][a][][b]\")\n    ;; => (\"foo\" 0 \"a\" 0 \"b\")\n  ", :test true}, re-escape {:protocol-inline nil, :meta {:arglists (quote ([s])), :private true, :end-column 17, :end-line 190, :column 8, :line 190, :file "/Users/fabian/Code/go/src/github.com/fuzzyants/wikingo/app/resources/public/js/compiled/out/secretary/core.cljs"}, :private true, :name secretary.core/re-escape, :variadic false, :file "resources/public/js/compiled/out/secretary/core.cljs", :end-column 17, :method-params ([s]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 190, :end-line 190, :max-fixed-arity 1, :fn-var true, :arglists (quote ([s])), :test true}, decode-query-params {:protocol-inline nil, :meta {:arglists (quote ([query-string])), :doc "Extract a map of query parameters from a query string.", :end-column 26, :end-line 155, :column 7, :line 155, :file "/Users/fabian/Code/go/src/github.com/fuzzyants/wikingo/app/resources/public/js/compiled/out/secretary/core.cljs"}, :name secretary.core/decode-query-params, :variadic false, :file "resources/public/js/compiled/out/secretary/core.cljs", :end-column 26, :method-params ([query-string]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 155, :end-line 155, :max-fixed-arity 1, :fn-var true, :arglists (quote ([query-string])), :doc "Extract a map of query parameters from a query string.", :test true}, re-matches* {:protocol-inline nil, :meta {:arglists (quote ([re s])), :doc "Like re-matches but result is a always vector. If re does not\n  capture matches then it will return a vector of [m m] as if it had a\n  single capture. Other wise it maintains consistent behavior with\n  re-matches. ", :private true, :end-column 19, :end-line 177, :column 8, :line 177, :file "/Users/fabian/Code/go/src/github.com/fuzzyants/wikingo/app/resources/public/js/compiled/out/secretary/core.cljs"}, :private true, :name secretary.core/re-matches*, :variadic false, :file "resources/public/js/compiled/out/secretary/core.cljs", :end-column 19, :method-params ([re s]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 177, :end-line 177, :max-fixed-arity 2, :fn-var true, :arglists (quote ([re s])), :doc "Like re-matches but result is a always vector. If re does not\n  capture matches then it will return a vector of [m m] as if it had a\n  single capture. Other wise it maintains consistent behavior with\n  re-matches. ", :test true}, lex* {:protocol-inline nil, :meta {:arglists (quote ([s clauses])), :doc "Attempt to lex a single token from s with clauses. Each clause is a\n  pair of [regexp action] where action is a function. regexp is\n  expected to begin with ^ and contain a single capture. If the\n  attempt is successful a vector of [s-without-token (action capture)]\n  is returned. Otherwise the result is nil.", :private true, :end-column 12, :end-line 199, :column 8, :line 199, :file "/Users/fabian/Code/go/src/github.com/fuzzyants/wikingo/app/resources/public/js/compiled/out/secretary/core.cljs"}, :private true, :name secretary.core/lex*, :variadic false, :file "resources/public/js/compiled/out/secretary/core.cljs", :end-column 12, :method-params ([s clauses]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 199, :end-line 199, :max-fixed-arity 2, :fn-var true, :arglists (quote ([s clauses])), :doc "Attempt to lex a single token from s with clauses. Each clause is a\n  pair of [regexp action] where action is a function. regexp is\n  expected to begin with ^ and contain a single capture. If the\n  attempt is successful a vector of [s-without-token (action capture)]\n  is returned. Otherwise the result is nil.", :test true}, *routes* {:meta {:dynamic true, :end-column 24, :end-line 264, :column 16, :line 264, :file "/Users/fabian/Code/go/src/github.com/fuzzyants/wikingo/app/resources/public/js/compiled/out/secretary/core.cljs"}, :file "resources/public/js/compiled/out/secretary/core.cljs", :line 264, :column 1, :end-line 264, :end-column 24, :dynamic true, :test true, :name secretary.core/*routes*}, prefix {:protocol-inline nil, :meta {:arglists (quote ([])), :private true, :end-column 14, :end-line 299, :column 8, :line 299, :file "/Users/fabian/Code/go/src/github.com/fuzzyants/wikingo/app/resources/public/js/compiled/out/secretary/core.cljs"}, :private true, :name secretary.core/prefix, :variadic false, :file "resources/public/js/compiled/out/secretary/core.cljs", :end-column 14, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 299, :end-line 299, :max-fixed-arity 0, :fn-var true, :arglists (quote ([])), :test true}, IRouteMatches {:meta {:protocol-info {:methods {route-matches [[this route]]}}, :protocol-symbol true, :doc nil, :end-column 27, :end-line 9, :column 14, :line 9, :file "/Users/fabian/Code/go/src/github.com/fuzzyants/wikingo/app/resources/public/js/compiled/out/secretary/core.cljs"}, :protocol-symbol true, :name secretary.core/IRouteMatches, :file "resources/public/js/compiled/out/secretary/core.cljs", :end-column 27, :column 1, :line 9, :protocol-info {:methods {route-matches [[this route]]}}, :info nil, :end-line 9, :impls #{js/RegExp secretary.core/t26295 cljs.core/PersistentVector secretary.core/t26300 string}, :doc nil, :test true}, key-index {:protocol-inline nil, :meta {:top-fn {:variadic false, :max-fixed-arity 2, :method-params ([k] [k index]), :arglists ([k] [k index]), :arglists-meta (nil nil)}, :arglists (quote ([k] [k index])), :private true, :end-column 17, :end-line 54, :column 8, :line 54, :file "/Users/fabian/Code/go/src/github.com/fuzzyants/wikingo/app/resources/public/js/compiled/out/secretary/core.cljs"}, :private true, :name secretary.core/key-index, :variadic false, :file "resources/public/js/compiled/out/secretary/core.cljs", :end-column 17, :top-fn {:variadic false, :max-fixed-arity 2, :method-params ([k] [k index]), :arglists ([k] [k index]), :arglists-meta (nil nil)}, :method-params ([k] [k index]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 54, :end-line 54, :max-fixed-arity 2, :fn-var true, :arglists ([k] [k index]), :test true}, compile-route {:protocol-inline nil, :meta {:arglists (quote ([orig-route])), :doc "Given a route return an instance of IRouteMatches.", :private true, :end-column 21, :end-line 223, :column 8, :line 223, :file "/Users/fabian/Code/go/src/github.com/fuzzyants/wikingo/app/resources/public/js/compiled/out/secretary/core.cljs"}, :private true, :name secretary.core/compile-route, :variadic false, :file "resources/public/js/compiled/out/secretary/core.cljs", :end-column 21, :method-params ([orig-route]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 223, :end-line 223, :max-fixed-arity 1, :fn-var true, :arglists (quote ([orig-route])), :doc "Given a route return an instance of IRouteMatches.", :test true}, remove-route! {:protocol-inline nil, :meta {:arglists (quote ([obj])), :end-column 20, :end-line 273, :column 7, :line 273, :file "/Users/fabian/Code/go/src/github.com/fuzzyants/wikingo/app/resources/public/js/compiled/out/secretary/core.cljs"}, :name secretary.core/remove-route!, :variadic false, :file "resources/public/js/compiled/out/secretary/core.cljs", :end-column 20, :method-params ([obj]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 273, :end-line 273, :max-fixed-arity 1, :fn-var true, :arglists (quote ([obj])), :test true}, IRenderRoute {:meta {:protocol-info {:methods {render-route [[this] [this params]]}}, :protocol-symbol true, :doc nil, :end-column 26, :end-line 15, :column 14, :line 15, :file "/Users/fabian/Code/go/src/github.com/fuzzyants/wikingo/app/resources/public/js/compiled/out/secretary/core.cljs"}, :protocol-symbol true, :name secretary.core/IRenderRoute, :file "resources/public/js/compiled/out/secretary/core.cljs", :end-column 26, :column 1, :line 15, :protocol-info {:methods {render-route [[this] [this params]]}}, :info nil, :end-line 15, :impls #{cljs.core/PersistentVector string}, :doc nil, :test true}, t26295 {:num-fields 7, :protocols #{secretary.core/IRouteValue cljs.core/IMeta cljs.core/IWithMeta secretary.core/IRouteMatches}, :name secretary.core/t26295, :file "resources/public/js/compiled/out/secretary/core.cljs", :type true, :anonymous true, :column 4, :line 243, :record false, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, ->t26300 {:protocol-inline nil, :meta {:file nil, :arglists (quote ([params re vec__26299 clauses orig-route compile-route meta26301])), :factory :positional, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :protocols #{secretary.core/IRouteValue cljs.core/IMeta cljs.core/IWithMeta secretary.core/IRouteMatches}, :anonymous true}, :protocols #{secretary.core/IRouteValue cljs.core/IMeta cljs.core/IWithMeta secretary.core/IRouteMatches}, :name secretary.core/->t26300, :variadic false, :file "resources/public/js/compiled/out/secretary/core.cljs", :method-params ([params re vec__26299 clauses orig-route compile-route meta26301]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 4, :factory :positional, :line 243, :max-fixed-arity 7, :fn-var true, :arglists (quote ([params re vec__26299 clauses orig-route compile-route meta26301])), :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :test true}, uri-with-leading-slash {:protocol-inline nil, :meta {:arglists (quote ([uri])), :doc "Ensures that the uri has a leading slash", :private true, :end-column 30, :end-line 307, :column 8, :line 307, :file "/Users/fabian/Code/go/src/github.com/fuzzyants/wikingo/app/resources/public/js/compiled/out/secretary/core.cljs"}, :private true, :name secretary.core/uri-with-leading-slash, :variadic false, :file "resources/public/js/compiled/out/secretary/core.cljs", :end-column 30, :method-params ([uri]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 307, :end-line 307, :max-fixed-arity 1, :fn-var true, :arglists (quote ([uri])), :doc "Ensures that the uri has a leading slash", :test true}, invalid-params {:protocol-inline nil, :meta {:arglists (quote ([params validations])), :end-column 21, :end-line 326, :column 7, :line 326, :file "/Users/fabian/Code/go/src/github.com/fuzzyants/wikingo/app/resources/public/js/compiled/out/secretary/core.cljs"}, :name secretary.core/invalid-params, :variadic false, :file "resources/public/js/compiled/out/secretary/core.cljs", :end-column 21, :method-params ([params validations]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 326, :end-line 326, :max-fixed-arity 2, :fn-var true, :arglists (quote ([params validations])), :test true}, encode-pair {:meta {:doc "Given a key and a value return and encoded key-value pair.", :private true, :end-column 14, :end-line 46, :column 3, :line 46, :file "/Users/fabian/Code/go/src/github.com/fuzzyants/wikingo/app/resources/public/js/compiled/out/secretary/core.cljs"}, :private true, :name secretary.core/encode-pair, :file "resources/public/js/compiled/out/secretary/core.cljs", :end-column 14, :column 1, :line 43, :end-line 46, :doc "Given a key and a value return and encoded key-value pair.", :test true}, reset-routes! {:protocol-inline nil, :meta {:arglists (quote ([])), :end-column 20, :end-line 281, :column 7, :line 281, :file "/Users/fabian/Code/go/src/github.com/fuzzyants/wikingo/app/resources/public/js/compiled/out/secretary/core.cljs"}, :name secretary.core/reset-routes!, :variadic false, :file "resources/public/js/compiled/out/secretary/core.cljs", :end-column 20, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 281, :end-line 281, :max-fixed-arity 0, :fn-var true, :arglists (quote ([])), :test true}}, :require-macros {secretary.core secretary.core}, :cljs.analyzer/constants {:order [:prefix :hierarchy :secretary.core/sequential :secretary.core/map :default :else :* :action :params :route :query-params], :seen #{:* :else :default :secretary.core/map :params :route :prefix :query-params :action :secretary.core/sequential :hierarchy}}, :doc nil}