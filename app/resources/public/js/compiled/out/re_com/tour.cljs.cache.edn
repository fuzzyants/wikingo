;; Analyzed by ClojureScript 0.0-3211
{:use-macros {handler-fn re-com.core}, :excludes #{}, :name re-com.tour, :imports nil, :requires {re-com.buttons re-com.buttons, re-com.box re-com.box, reagent.core reagent.core, reagent reagent.core}, :uses {button re-com.buttons, flex-child-style re-com.box}, :defs {make-tour-nav {:protocol-inline nil, :meta {:arglists (quote ([tour])), :doc "Generate the hr and previous/next buttons markup.\n  If first button in tour, don't generate a Previous button.\n  If last button in tour, change Next button to a Finish button", :end-column 20, :end-line 74, :column 7, :line 74, :file "/Users/fabian/Code/go/src/github.com/fuzzyants/wikingo/app/resources/public/js/compiled/out/re_com/tour.cljs"}, :name re-com.tour/make-tour-nav, :variadic false, :file "resources/public/js/compiled/out/re_com/tour.cljs", :end-column 20, :method-params ([tour]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 74, :end-line 74, :max-fixed-arity 1, :fn-var true, :arglists (quote ([tour])), :doc "Generate the hr and previous/next buttons markup.\n  If first button in tour, don't generate a Previous button.\n  If last button in tour, change Next button to a Finish button", :test true}, prev-tour-step {:protocol-inline nil, :meta {:arglists (quote ([tour])), :private true, :end-column 22, :end-line 63, :column 8, :line 63, :file "/Users/fabian/Code/go/src/github.com/fuzzyants/wikingo/app/resources/public/js/compiled/out/re_com/tour.cljs"}, :private true, :name re-com.tour/prev-tour-step, :variadic false, :file "resources/public/js/compiled/out/re_com/tour.cljs", :end-column 22, :method-params ([tour]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 63, :end-line 63, :max-fixed-arity 1, :fn-var true, :arglists (quote ([tour])), :test true}, next-tour-step {:protocol-inline nil, :meta {:arglists (quote ([tour])), :private true, :end-column 22, :end-line 52, :column 8, :line 52, :file "/Users/fabian/Code/go/src/github.com/fuzzyants/wikingo/app/resources/public/js/compiled/out/re_com/tour.cljs"}, :private true, :name re-com.tour/next-tour-step, :variadic false, :file "resources/public/js/compiled/out/re_com/tour.cljs", :end-column 22, :method-params ([tour]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 52, :end-line 52, :max-fixed-arity 1, :fn-var true, :arglists (quote ([tour])), :test true}, finish-tour {:protocol-inline nil, :meta {:arglists (quote ([tour])), :doc "Closes all tour popovers", :end-column 18, :end-line 46, :column 7, :line 46, :file "/Users/fabian/Code/go/src/github.com/fuzzyants/wikingo/app/resources/public/js/compiled/out/re_com/tour.cljs"}, :name re-com.tour/finish-tour, :variadic false, :file "resources/public/js/compiled/out/re_com/tour.cljs", :end-column 18, :method-params ([tour]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 46, :end-line 46, :max-fixed-arity 1, :fn-var true, :arglists (quote ([tour])), :doc "Closes all tour popovers", :test true}, start-tour {:protocol-inline nil, :meta {:arglists (quote ([tour])), :doc "Sets the first popover atom in the tour to true", :end-column 17, :end-line 38, :column 7, :line 38, :file "/Users/fabian/Code/go/src/github.com/fuzzyants/wikingo/app/resources/public/js/compiled/out/re_com/tour.cljs"}, :name re-com.tour/start-tour, :variadic false, :file "resources/public/js/compiled/out/re_com/tour.cljs", :end-column 17, :method-params ([tour]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 38, :end-line 38, :max-fixed-arity 1, :fn-var true, :arglists (quote ([tour])), :doc "Sets the first popover atom in the tour to true", :test true}, initialise-tour {:protocol-inline nil, :meta {:arglists (quote ([tour])), :doc "Resets all poover atoms to false", :private true, :end-column 23, :end-line 32, :column 8, :line 32, :file "/Users/fabian/Code/go/src/github.com/fuzzyants/wikingo/app/resources/public/js/compiled/out/re_com/tour.cljs"}, :private true, :name re-com.tour/initialise-tour, :variadic false, :file "resources/public/js/compiled/out/re_com/tour.cljs", :end-column 23, :method-params ([tour]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 32, :end-line 32, :max-fixed-arity 1, :fn-var true, :arglists (quote ([tour])), :doc "Resets all poover atoms to false", :test true}, make-tour {:protocol-inline nil, :meta {:arglists (quote ([tour-spec])), :doc "Returns a map containing\n  - A reagent atom for each tour step controlling popover show/hide (boolean)\n  - A standard atom holding the current step (integer)\n  - A copy of the steps parameter passed in, to determine the order for prev/next functions\n  It sets the first step atom to true so that it will be initially shown\n  Sample return value:\n  {:steps [:step1 :step2 :step3]\n  :current-step (atom 0)\n  :step1 (reagent/atom true)\n  :step2 (reagent/atom false)\n  :step3 (reagent/atom false)}", :end-column 16, :end-line 14, :column 7, :line 14, :file "/Users/fabian/Code/go/src/github.com/fuzzyants/wikingo/app/resources/public/js/compiled/out/re_com/tour.cljs"}, :name re-com.tour/make-tour, :variadic false, :file "resources/public/js/compiled/out/re_com/tour.cljs", :end-column 16, :method-params ([tour-spec]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 14, :end-line 14, :max-fixed-arity 1, :fn-var true, :arglists (quote ([tour-spec])), :doc "Returns a map containing\n  - A reagent atom for each tour step controlling popover show/hide (boolean)\n  - A standard atom holding the current step (integer)\n  - A copy of the steps parameter passed in, to determine the order for prev/next functions\n  It sets the first step atom to true so that it will be initially shown\n  Sample return value:\n  {:steps [:step1 :step2 :step3]\n  :current-step (atom 0)\n  :step1 (reagent/atom true)\n  :step2 (reagent/atom false)\n  :step3 (reagent/atom false)}", :test true}}, :require-macros {re-com.core re-com.core}, :cljs.analyzer/constants {:order [:current-step :steps :div :hr :style :margin :label :on-click :margin-right :class], :seen #{:hr :current-step :steps :on-click :style :div :label :class :margin-right :margin}}, :doc nil}