;; Analyzed by ClojureScript 0.0-3211
{:use-macros {validate-args-macro re-com.validate, handler-fn re-com.core}, :excludes #{}, :name re-com.misc, :imports nil, :requires {reagent reagent.core, reagent.core reagent.core, re-com.validate re-com.validate, re-com.box re-com.box, re-com.popover re-com.popover, re-com.util re-com.util}, :uses {align-style re-com.box, html-attr? re-com.validate, h-box re-com.box, string-or-atom? re-com.validate, deref-or-value re-com.util, throbber-sizes-list re-com.validate, throbber-size? re-com.validate, regex? re-com.validate, css-style? re-com.validate, box re-com.box, px re-com.util, string-or-hiccup? re-com.validate, v-box re-com.box, flex-child-style re-com.box, input-status-type? re-com.validate, popover-tooltip re-com.popover, line re-com.box, number-or-string? re-com.validate, input-status-types-list re-com.validate, gap re-com.box}, :defs {input-textarea {:protocol-inline nil, :meta {:top-fn {:variadic true, :max-fixed-arity 0, :method-params [(args)], :arglists [[& args]], :arglists-meta (nil)}, :arglists (quote ([& args])), :end-column 21, :end-line 145, :column 7, :line 145, :file "/Users/fabian/Code/go/src/github.com/fuzzyants/wikingo/app/resources/public/js/compiled/out/re_com/misc.cljs"}, :name re-com.misc/input-textarea, :variadic true, :file "resources/public/js/compiled/out/re_com/misc.cljs", :end-column 21, :top-fn {:variadic true, :max-fixed-arity 0, :method-params [(args)], :arglists [[& args]], :arglists-meta (nil)}, :method-params [(args)], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 145, :end-line 145, :max-fixed-arity 0, :fn-var true, :arglists [[& args]], :test true}, slider {:protocol-inline nil, :meta {:arglists (quote ([])), :doc "Returns markup for an HTML5 slider input", :end-column 13, :end-line 261, :column 7, :line 261, :file "/Users/fabian/Code/go/src/github.com/fuzzyants/wikingo/app/resources/public/js/compiled/out/re_com/misc.cljs"}, :name re-com.misc/slider, :variadic false, :file "resources/public/js/compiled/out/re_com/misc.cljs", :end-column 13, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 261, :end-line 261, :max-fixed-arity 0, :fn-var true, :arglists (quote ([])), :doc "Returns markup for an HTML5 slider input", :test true}, progress-bar-args-desc {:meta {:end-column 28, :end-line 301, :column 6, :line 301, :file "/Users/fabian/Code/go/src/github.com/fuzzyants/wikingo/app/resources/public/js/compiled/out/re_com/misc.cljs"}, :file "resources/public/js/compiled/out/re_com/misc.cljs", :line 301, :column 1, :end-line 301, :end-column 28, :test true, :name re-com.misc/progress-bar-args-desc}, progress-bar {:protocol-inline nil, :meta {:top-fn {:variadic true, :max-fixed-arity 0, :method-params [({:keys [model width striped? class style attr], :or {width "100%"}, :as args})], :arglists [[& {:keys [model width striped? class style attr], :or {width "100%"}, :as args}]], :arglists-meta (nil)}, :arglists (quote ([& {:keys [model width striped? class style attr], :or {width "100%"}, :as args}])), :doc "Render a bootstrap styled progress bar", :end-column 19, :end-line 309, :column 7, :line 309, :file "/Users/fabian/Code/go/src/github.com/fuzzyants/wikingo/app/resources/public/js/compiled/out/re_com/misc.cljs"}, :name re-com.misc/progress-bar, :variadic true, :file "resources/public/js/compiled/out/re_com/misc.cljs", :end-column 19, :top-fn {:variadic true, :max-fixed-arity 0, :method-params [({:keys [model width striped? class style attr], :or {width "100%"}, :as args})], :arglists [[& {:keys [model width striped? class style attr], :or {width "100%"}, :as args}]], :arglists-meta (nil)}, :method-params [({:keys [model width striped? class style attr], :or {width "100%"}, :as args})], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 309, :end-line 309, :max-fixed-arity 0, :fn-var true, :arglists [[& {:keys [model width striped? class style attr], :or {width "100%"}, :as args}]], :doc "Render a bootstrap styled progress bar", :test true}, input-text {:protocol-inline nil, :meta {:top-fn {:variadic true, :max-fixed-arity 0, :method-params [(args)], :arglists [[& args]], :arglists-meta (nil)}, :arglists (quote ([& args])), :end-column 17, :end-line 140, :column 7, :line 140, :file "/Users/fabian/Code/go/src/github.com/fuzzyants/wikingo/app/resources/public/js/compiled/out/re_com/misc.cljs"}, :name re-com.misc/input-text, :variadic true, :file "resources/public/js/compiled/out/re_com/misc.cljs", :end-column 17, :top-fn {:variadic true, :max-fixed-arity 0, :method-params [(args)], :arglists [[& args]], :arglists-meta (nil)}, :method-params [(args)], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 140, :end-line 140, :max-fixed-arity 0, :fn-var true, :arglists [[& args]], :test true}, radio-button {:protocol-inline nil, :meta {:top-fn {:variadic true, :max-fixed-arity 0, :method-params [({:keys [model on-change value label disabled? style label-class label-style], :as args})], :arglists [[& {:keys [model on-change value label disabled? style label-class label-style], :as args}]], :arglists-meta (nil)}, :arglists (quote ([& {:keys [model on-change value label disabled? style label-class label-style], :as args}])), :doc "I return the markup for a radio button, with an optional RHS label", :end-column 19, :end-line 211, :column 7, :line 211, :file "/Users/fabian/Code/go/src/github.com/fuzzyants/wikingo/app/resources/public/js/compiled/out/re_com/misc.cljs"}, :name re-com.misc/radio-button, :variadic true, :file "resources/public/js/compiled/out/re_com/misc.cljs", :end-column 19, :top-fn {:variadic true, :max-fixed-arity 0, :method-params [({:keys [model on-change value label disabled? style label-class label-style], :as args})], :arglists [[& {:keys [model on-change value label disabled? style label-class label-style], :as args}]], :arglists-meta (nil)}, :method-params [({:keys [model on-change value label disabled? style label-class label-style], :as args})], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 211, :end-line 211, :max-fixed-arity 0, :fn-var true, :arglists [[& {:keys [model on-change value label disabled? style label-class label-style], :as args}]], :doc "I return the markup for a radio button, with an optional RHS label", :test true}, checkbox {:protocol-inline nil, :meta {:top-fn {:variadic true, :max-fixed-arity 0, :method-params [({:keys [model on-change label disabled? style label-class label-style], :as args})], :arglists [[& {:keys [model on-change label disabled? style label-class label-style], :as args}]], :arglists-meta (nil)}, :arglists (quote ([& {:keys [model on-change label disabled? style label-class label-style], :as args}])), :doc "I return the markup for a checkbox, with an optional RHS label", :end-column 15, :end-line 164, :column 7, :line 164, :file "/Users/fabian/Code/go/src/github.com/fuzzyants/wikingo/app/resources/public/js/compiled/out/re_com/misc.cljs"}, :name re-com.misc/checkbox, :variadic true, :file "resources/public/js/compiled/out/re_com/misc.cljs", :end-column 15, :top-fn {:variadic true, :max-fixed-arity 0, :method-params [({:keys [model on-change label disabled? style label-class label-style], :as args})], :arglists [[& {:keys [model on-change label disabled? style label-class label-style], :as args}]], :arglists-meta (nil)}, :method-params [({:keys [model on-change label disabled? style label-class label-style], :as args})], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 164, :end-line 164, :max-fixed-arity 0, :fn-var true, :arglists [[& {:keys [model on-change label disabled? style label-class label-style], :as args}]], :doc "I return the markup for a checkbox, with an optional RHS label", :test true}, checkbox-args-desc {:meta {:end-column 24, :end-line 154, :column 6, :line 154, :file "/Users/fabian/Code/go/src/github.com/fuzzyants/wikingo/app/resources/public/js/compiled/out/re_com/misc.cljs"}, :file "resources/public/js/compiled/out/re_com/misc.cljs", :line 154, :column 1, :end-line 154, :end-column 24, :test true, :name re-com.misc/checkbox-args-desc}, throbber-args-desc {:meta {:end-column 24, :end-line 337, :column 6, :line 337, :file "/Users/fabian/Code/go/src/github.com/fuzzyants/wikingo/app/resources/public/js/compiled/out/re_com/misc.cljs"}, :file "resources/public/js/compiled/out/re_com/misc.cljs", :line 337, :column 1, :end-line 337, :end-column 24, :test true, :name re-com.misc/throbber-args-desc}, radio-button-args-desc {:meta {:end-column 28, :end-line 201, :column 6, :line 201, :file "/Users/fabian/Code/go/src/github.com/fuzzyants/wikingo/app/resources/public/js/compiled/out/re_com/misc.cljs"}, :file "resources/public/js/compiled/out/re_com/misc.cljs", :line 201, :column 1, :end-line 201, :end-column 28, :test true, :name re-com.misc/radio-button-args-desc}, input-text-base {:protocol-inline nil, :meta {:top-fn {:variadic true, :max-fixed-arity 0, :method-params [({:keys [model input-type], :as args})], :arglists [[& {:keys [model input-type], :as args}]], :arglists-meta (nil)}, :arglists (quote ([& {:keys [model input-type], :as args}])), :doc "Returns markup for a basic text input label", :private true, :end-column 23, :end-line 41, :column 8, :line 41, :file "/Users/fabian/Code/go/src/github.com/fuzzyants/wikingo/app/resources/public/js/compiled/out/re_com/misc.cljs"}, :private true, :name re-com.misc/input-text-base, :variadic true, :file "resources/public/js/compiled/out/re_com/misc.cljs", :end-column 23, :top-fn {:variadic true, :max-fixed-arity 0, :method-params [({:keys [model input-type], :as args})], :arglists [[& {:keys [model input-type], :as args}]], :arglists-meta (nil)}, :method-params [({:keys [model input-type], :as args})], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 41, :end-line 41, :max-fixed-arity 0, :fn-var true, :arglists [[& {:keys [model input-type], :as args}]], :doc "Returns markup for a basic text input label", :test true}, slider-args-desc {:meta {:end-column 22, :end-line 249, :column 6, :line 249, :file "/Users/fabian/Code/go/src/github.com/fuzzyants/wikingo/app/resources/public/js/compiled/out/re_com/misc.cljs"}, :file "resources/public/js/compiled/out/re_com/misc.cljs", :line 249, :column 1, :end-line 249, :end-column 22, :test true, :name re-com.misc/slider-args-desc}, input-text-args-desc {:meta {:end-column 26, :end-line 16, :column 6, :line 16, :file "/Users/fabian/Code/go/src/github.com/fuzzyants/wikingo/app/resources/public/js/compiled/out/re_com/misc.cljs"}, :file "resources/public/js/compiled/out/re_com/misc.cljs", :line 16, :column 1, :end-line 16, :end-column 26, :test true, :name re-com.misc/input-text-args-desc}, throbber {:protocol-inline nil, :meta {:top-fn {:variadic true, :max-fixed-arity 0, :method-params [({:keys [size color class style attr], :as args})], :arglists [[& {:keys [size color class style attr], :as args}]], :arglists-meta (nil)}, :arglists (quote ([& {:keys [size color class style attr], :as args}])), :doc "Render an animated throbber using CSS", :end-column 15, :end-line 344, :column 7, :line 344, :file "/Users/fabian/Code/go/src/github.com/fuzzyants/wikingo/app/resources/public/js/compiled/out/re_com/misc.cljs"}, :name re-com.misc/throbber, :variadic true, :file "resources/public/js/compiled/out/re_com/misc.cljs", :end-column 15, :top-fn {:variadic true, :max-fixed-arity 0, :method-params [({:keys [size color class style attr], :as args})], :arglists [[& {:keys [size color class style attr], :as args}]], :arglists-meta (nil)}, :method-params [({:keys [size color class style attr], :as args})], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 344, :end-line 344, :max-fixed-arity 0, :fn-var true, :arglists [[& {:keys [size color class style attr], :as args}]], :doc "Render an animated throbber using CSS", :test true}}, :require-macros {re-com.validate re-com.validate, re-com.core re-com.core}, :cljs.analyzer/constants {:order [:name :required :type :validate-fn :description :model :on-change :span :code :status :default :status-icon? :status-tooltip :placeholder :width :height :rows :change-on-blur? :validation-regex :disabled? :class :style :attr :br :input-type :align :start :children :div :disabled :value :on-blur :on-key-up :input :padding-right :textarea :label :position :right-center :showing? :anchor :i :on-mouse-over :on-mouse-out :warning :opacity :align-self :center :font-size :margin-left :title :label-style :label-class :checked :cursor :on-click :padding-left :min :max :step :child :striped? :role :transition :size :regular :color :li :background-color :ul], :seen #{:role :description :min :children :align :regular :ul :color :placeholder :disabled :font-size :transition :on-mouse-out :default :name :li :margin-left :value :background-color :width :start :on-blur :cursor :type :padding-right :on-click :size :title :center :style :textarea :input-type :rows :on-key-up :div :showing? :warning :right-center :padding-left :status :max :opacity :label :class :checked :change-on-blur? :code :label-style :validation-regex :position :validate-fn :br :on-mouse-over :child :anchor :input :align-self :on-change :disabled? :status-icon? :step :striped? :i :required :label-class :height :span :status-tooltip :model :attr}}, :doc nil}