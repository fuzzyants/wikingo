;; Analyzed by ClojureScript 0.0-3211
{:use-macros {validate-args-macro re-com.validate, handler-fn re-com.core}, :excludes #{}, :name re-com.tabs, :imports nil, :requires {re-com.validate re-com.validate, re-com.box re-com.box, re-com.util re-com.util}, :uses {deref-or-value re-com.util, css-style? re-com.validate, vector-of-maps? re-com.validate, flex-child-style re-com.box}, :defs {vertical-pill-tabs {:protocol-inline nil, :meta {:top-fn {:variadic true, :max-fixed-arity 0, :method-params [({:keys [model tabs on-change id-fn style label-fn], :or {id-fn :id, label-fn :label}, :as args})], :arglists [[& {:keys [model tabs on-change id-fn style label-fn], :or {id-fn :id, label-fn :label}, :as args}]], :arglists-meta (nil)}, :arglists (quote ([& {:keys [model tabs on-change id-fn style label-fn], :or {id-fn :id, label-fn :label}, :as args}])), :end-column 25, :end-line 141, :column 7, :line 141, :file "/Users/fabian/Code/go/src/github.com/fuzzyants/wikingo/app/resources/public/js/compiled/out/re_com/tabs.cljs"}, :name re-com.tabs/vertical-pill-tabs, :variadic true, :file "resources/public/js/compiled/out/re_com/tabs.cljs", :end-column 25, :top-fn {:variadic true, :max-fixed-arity 0, :method-params [({:keys [model tabs on-change id-fn style label-fn], :or {id-fn :id, label-fn :label}, :as args})], :arglists [[& {:keys [model tabs on-change id-fn style label-fn], :or {id-fn :id, label-fn :label}, :as args}]], :arglists-meta (nil)}, :method-params [({:keys [model tabs on-change id-fn style label-fn], :or {id-fn :id, label-fn :label}, :as args})], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 141, :end-line 141, :max-fixed-arity 0, :fn-var true, :arglists [[& {:keys [model tabs on-change id-fn style label-fn], :or {id-fn :id, label-fn :label}, :as args}]], :test true}, horizontal-pill-tabs {:protocol-inline nil, :meta {:top-fn {:variadic true, :max-fixed-arity 0, :method-params [({:keys [model tabs on-change id-fn style label-fn], :or {id-fn :id, label-fn :label}, :as args})], :arglists [[& {:keys [model tabs on-change id-fn style label-fn], :or {id-fn :id, label-fn :label}, :as args}]], :arglists-meta (nil)}, :arglists (quote ([& {:keys [model tabs on-change id-fn style label-fn], :or {id-fn :id, label-fn :label}, :as args}])), :end-column 27, :end-line 126, :column 7, :line 126, :file "/Users/fabian/Code/go/src/github.com/fuzzyants/wikingo/app/resources/public/js/compiled/out/re_com/tabs.cljs"}, :name re-com.tabs/horizontal-pill-tabs, :variadic true, :file "resources/public/js/compiled/out/re_com/tabs.cljs", :end-column 27, :top-fn {:variadic true, :max-fixed-arity 0, :method-params [({:keys [model tabs on-change id-fn style label-fn], :or {id-fn :id, label-fn :label}, :as args})], :arglists [[& {:keys [model tabs on-change id-fn style label-fn], :or {id-fn :id, label-fn :label}, :as args}]], :arglists-meta (nil)}, :method-params [({:keys [model tabs on-change id-fn style label-fn], :or {id-fn :id, label-fn :label}, :as args})], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 126, :end-line 126, :max-fixed-arity 0, :fn-var true, :arglists [[& {:keys [model tabs on-change id-fn style label-fn], :or {id-fn :id, label-fn :label}, :as args}]], :test true}, pill-tabs {:protocol-inline nil, :meta {:top-fn {:variadic true, :max-fixed-arity 0, :method-params [({:keys [model tabs on-change id-fn label-fn style vertical?]})], :arglists [[& {:keys [model tabs on-change id-fn label-fn style vertical?]}]], :arglists-meta (nil)}, :arglists (quote ([& {:keys [model tabs on-change id-fn label-fn style vertical?]}])), :private true, :end-column 17, :end-line 103, :column 8, :line 103, :file "/Users/fabian/Code/go/src/github.com/fuzzyants/wikingo/app/resources/public/js/compiled/out/re_com/tabs.cljs"}, :private true, :name re-com.tabs/pill-tabs, :variadic true, :file "resources/public/js/compiled/out/re_com/tabs.cljs", :end-column 17, :top-fn {:variadic true, :max-fixed-arity 0, :method-params [({:keys [model tabs on-change id-fn label-fn style vertical?]})], :arglists [[& {:keys [model tabs on-change id-fn label-fn style vertical?]}]], :arglists-meta (nil)}, :method-params [({:keys [model tabs on-change id-fn label-fn style vertical?]})], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 103, :end-line 103, :max-fixed-arity 0, :fn-var true, :arglists [[& {:keys [model tabs on-change id-fn label-fn style vertical?]}]], :test true}, vertical-bar-tabs {:protocol-inline nil, :meta {:top-fn {:variadic true, :max-fixed-arity 0, :method-params [({:keys [model tabs on-change id-fn label-fn style], :or {id-fn :id, label-fn :label}, :as args})], :arglists [[& {:keys [model tabs on-change id-fn label-fn style], :or {id-fn :id, label-fn :label}, :as args}]], :arglists-meta (nil)}, :arglists (quote ([& {:keys [model tabs on-change id-fn label-fn style], :or {id-fn :id, label-fn :label}, :as args}])), :end-column 24, :end-line 84, :column 7, :line 84, :file "/Users/fabian/Code/go/src/github.com/fuzzyants/wikingo/app/resources/public/js/compiled/out/re_com/tabs.cljs"}, :name re-com.tabs/vertical-bar-tabs, :variadic true, :file "resources/public/js/compiled/out/re_com/tabs.cljs", :end-column 24, :top-fn {:variadic true, :max-fixed-arity 0, :method-params [({:keys [model tabs on-change id-fn label-fn style], :or {id-fn :id, label-fn :label}, :as args})], :arglists [[& {:keys [model tabs on-change id-fn label-fn style], :or {id-fn :id, label-fn :label}, :as args}]], :arglists-meta (nil)}, :method-params [({:keys [model tabs on-change id-fn label-fn style], :or {id-fn :id, label-fn :label}, :as args})], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 84, :end-line 84, :max-fixed-arity 0, :fn-var true, :arglists [[& {:keys [model tabs on-change id-fn label-fn style], :or {id-fn :id, label-fn :label}, :as args}]], :test true}, horizontal-bar-tabs {:protocol-inline nil, :meta {:top-fn {:variadic true, :max-fixed-arity 0, :method-params [({:keys [model tabs on-change id-fn label-fn style], :or {id-fn :id, label-fn :label}, :as args})], :arglists [[& {:keys [model tabs on-change id-fn label-fn style], :or {id-fn :id, label-fn :label}, :as args}]], :arglists-meta (nil)}, :arglists (quote ([& {:keys [model tabs on-change id-fn label-fn style], :or {id-fn :id, label-fn :label}, :as args}])), :end-column 26, :end-line 70, :column 7, :line 70, :file "/Users/fabian/Code/go/src/github.com/fuzzyants/wikingo/app/resources/public/js/compiled/out/re_com/tabs.cljs"}, :name re-com.tabs/horizontal-bar-tabs, :variadic true, :file "resources/public/js/compiled/out/re_com/tabs.cljs", :end-column 26, :top-fn {:variadic true, :max-fixed-arity 0, :method-params [({:keys [model tabs on-change id-fn label-fn style], :or {id-fn :id, label-fn :label}, :as args})], :arglists [[& {:keys [model tabs on-change id-fn label-fn style], :or {id-fn :id, label-fn :label}, :as args}]], :arglists-meta (nil)}, :method-params [({:keys [model tabs on-change id-fn label-fn style], :or {id-fn :id, label-fn :label}, :as args})], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 70, :end-line 70, :max-fixed-arity 0, :fn-var true, :arglists [[& {:keys [model tabs on-change id-fn label-fn style], :or {id-fn :id, label-fn :label}, :as args}]], :test true}, bar-tabs {:protocol-inline nil, :meta {:top-fn {:variadic true, :max-fixed-arity 0, :method-params [({:keys [model tabs on-change id-fn label-fn style vertical?]})], :arglists [[& {:keys [model tabs on-change id-fn label-fn style vertical?]}]], :arglists-meta (nil)}, :arglists (quote ([& {:keys [model tabs on-change id-fn label-fn style vertical?]}])), :private true, :end-column 16, :end-line 49, :column 8, :line 49, :file "/Users/fabian/Code/go/src/github.com/fuzzyants/wikingo/app/resources/public/js/compiled/out/re_com/tabs.cljs"}, :private true, :name re-com.tabs/bar-tabs, :variadic true, :file "resources/public/js/compiled/out/re_com/tabs.cljs", :end-column 16, :top-fn {:variadic true, :max-fixed-arity 0, :method-params [({:keys [model tabs on-change id-fn label-fn style vertical?]})], :arglists [[& {:keys [model tabs on-change id-fn label-fn style vertical?]}]], :arglists-meta (nil)}, :method-params [({:keys [model tabs on-change id-fn label-fn style vertical?]})], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 49, :end-line 49, :max-fixed-arity 0, :fn-var true, :arglists [[& {:keys [model tabs on-change id-fn label-fn style vertical?]}]], :test true}, horizontal-tabs {:protocol-inline nil, :meta {:top-fn {:variadic true, :max-fixed-arity 0, :method-params [({:keys [model tabs on-change id-fn label-fn style], :or {id-fn :id, label-fn :label}, :as args})], :arglists [[& {:keys [model tabs on-change id-fn label-fn style], :or {id-fn :id, label-fn :label}, :as args}]], :arglists-meta (nil)}, :arglists (quote ([& {:keys [model tabs on-change id-fn label-fn style], :or {id-fn :id, label-fn :label}, :as args}])), :end-column 22, :end-line 20, :column 7, :line 20, :file "/Users/fabian/Code/go/src/github.com/fuzzyants/wikingo/app/resources/public/js/compiled/out/re_com/tabs.cljs"}, :name re-com.tabs/horizontal-tabs, :variadic true, :file "resources/public/js/compiled/out/re_com/tabs.cljs", :end-column 22, :top-fn {:variadic true, :max-fixed-arity 0, :method-params [({:keys [model tabs on-change id-fn label-fn style], :or {id-fn :id, label-fn :label}, :as args})], :arglists [[& {:keys [model tabs on-change id-fn label-fn style], :or {id-fn :id, label-fn :label}, :as args}]], :arglists-meta (nil)}, :method-params [({:keys [model tabs on-change id-fn label-fn style], :or {id-fn :id, label-fn :label}, :as args})], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 20, :end-line 20, :max-fixed-arity 0, :fn-var true, :arglists [[& {:keys [model tabs on-change id-fn label-fn style], :or {id-fn :id, label-fn :label}, :as args}]], :test true}, tabs-args-desc {:meta {:end-column 20, :end-line 12, :column 6, :line 12, :file "/Users/fabian/Code/go/src/github.com/fuzzyants/wikingo/app/resources/public/js/compiled/out/re_com/tabs.cljs"}, :file "resources/public/js/compiled/out/re_com/tabs.cljs", :line 12, :column 1, :end-line 12, :end-column 20, :test true, :name re-com.tabs/tabs-args-desc}}, :require-macros {re-com.validate re-com.validate, re-com.core re-com.core}, :cljs.analyzer/constants {:order [:name :required :type :validate-fn :description :tabs :model :on-change :default :id-fn :id :span :code :label-fn :label :style :ul :class :li :key :a :on-click :cursor :vertical? :div :button :role], :seen #{:role :description :label-fn :ul :key :tabs :button :default :name :li :cursor :type :id-fn :on-click :style :div :vertical? :label :id :class :code :validate-fn :on-change :required :a :span :model}}, :doc nil}