;; Analyzed by ClojureScript 0.0-3211
{:use-macros nil, :excludes #{}, :name re-com.validate, :imports nil, :requires {goog.date.UtcDateTime goog.date.UtcDateTime, gstring goog.string, goog.string goog.string, reagent.impl.template reagent.impl.template, re-com.util re-com.util, clojure.set clojure.set}, :uses {valid-tag? reagent.impl.template, deref-or-value re-com.util, superset? clojure.set}, :defs {validate-fns-pass? {:protocol-inline nil, :meta {:arglists (quote ([args-with-validators passed-args component-name])), :doc "Gathers together a list of args that have a validator and...\n   returns true if all argument values are valid OR are just warnings (log warning to the console).\n   Otherwise log an error to the console and return false.\n   Validation functions can return:\n         - true:   validation success\n         - false:  validation failed - use standard error message\n         - map:    validation failed - includes two keys:\n                                         :status  - :error:   log to console as error\n                                                    :warning: log to console as warning\n                                         :message - use this string in the message of the warning/error", :end-column 25, :end-line 67, :column 7, :line 67, :file "/Users/fabian/Code/go/src/github.com/fuzzyants/wikingo/app/resources/public/js/compiled/out/re_com/validate.cljs"}, :name re-com.validate/validate-fns-pass?, :variadic false, :file "resources/public/js/compiled/out/re_com/validate.cljs", :end-column 25, :method-params ([args-with-validators passed-args component-name]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 67, :end-line 67, :max-fixed-arity 3, :fn-var true, :arglists (quote ([args-with-validators passed-args component-name])), :doc "Gathers together a list of args that have a validator and...\n   returns true if all argument values are valid OR are just warnings (log warning to the console).\n   Otherwise log an error to the console and return false.\n   Validation functions can return:\n         - true:   validation success\n         - false:  validation failed - use standard error message\n         - map:    validation failed - includes two keys:\n                                         :status  - :error:   log to console as error\n                                                    :warning: log to console as warning\n                                         :message - use this string in the message of the warning/error", :test true}, html-attr? {:protocol-inline nil, :meta {:arglists (quote ([arg])), :doc "Returns true if the passed argument is a valid HTML, SVG or event attribute.\n   Otherwise returns a warning map.\n   Notes:\n    - Prevents :class and :style attributes", :end-column 17, :end-line 285, :column 7, :line 285, :file "/Users/fabian/Code/go/src/github.com/fuzzyants/wikingo/app/resources/public/js/compiled/out/re_com/validate.cljs"}, :name re-com.validate/html-attr?, :variadic false, :file "resources/public/js/compiled/out/re_com/validate.cljs", :end-column 17, :method-params ([arg]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 285, :end-line 285, :max-fixed-arity 1, :fn-var true, :arglists (quote ([arg])), :doc "Returns true if the passed argument is a valid HTML, SVG or event attribute.\n   Otherwise returns a warning map.\n   Notes:\n    - Prevents :class and :style attributes", :test true}, alert-type? {:protocol-inline nil, :meta {:arglists (quote ([arg])), :end-column 18, :end-line 141, :column 7, :line 141, :file "/Users/fabian/Code/go/src/github.com/fuzzyants/wikingo/app/resources/public/js/compiled/out/re_com/validate.cljs"}, :name re-com.validate/alert-type?, :variadic false, :file "resources/public/js/compiled/out/re_com/validate.cljs", :end-column 18, :method-params ([arg]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 141, :end-line 141, :max-fixed-arity 1, :fn-var true, :arglists (quote ([arg])), :test true}, input-status-types {:meta {:end-column 24, :end-line 123, :column 6, :line 123, :file "/Users/fabian/Code/go/src/github.com/fuzzyants/wikingo/app/resources/public/js/compiled/out/re_com/validate.cljs"}, :file "resources/public/js/compiled/out/re_com/validate.cljs", :line 123, :column 1, :end-line 123, :end-column 24, :test true, :name re-com.validate/input-status-types}, throbber-sizes {:meta {:end-column 20, :end-line 122, :column 6, :line 122, :file "/Users/fabian/Code/go/src/github.com/fuzzyants/wikingo/app/resources/public/js/compiled/out/re_com/validate.cljs"}, :file "resources/public/js/compiled/out/re_com/validate.cljs", :line 122, :column 1, :end-line 122, :end-column 20, :test true, :name re-com.validate/throbber-sizes}, scroll-style? {:protocol-inline nil, :meta {:arglists (quote ([arg])), :end-column 20, :end-line 140, :column 7, :line 140, :file "/Users/fabian/Code/go/src/github.com/fuzzyants/wikingo/app/resources/public/js/compiled/out/re_com/validate.cljs"}, :name re-com.validate/scroll-style?, :variadic false, :file "resources/public/js/compiled/out/re_com/validate.cljs", :end-column 20, :method-params ([arg]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 140, :end-line 140, :max-fixed-arity 1, :fn-var true, :arglists (quote ([arg])), :test true}, string-or-atom? {:protocol-inline nil, :meta {:arglists (quote ([arg])), :doc "Returns true if the passed argument is a string (or a string within an atom), otherwise false/error", :end-column 22, :end-line 325, :column 7, :line 325, :file "/Users/fabian/Code/go/src/github.com/fuzzyants/wikingo/app/resources/public/js/compiled/out/re_com/validate.cljs"}, :name re-com.validate/string-or-atom?, :variadic false, :file "resources/public/js/compiled/out/re_com/validate.cljs", :end-column 22, :method-params ([arg]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 325, :end-line 325, :max-fixed-arity 1, :fn-var true, :arglists (quote ([arg])), :doc "Returns true if the passed argument is a string (or a string within an atom), otherwise false/error", :test true}, justify-options {:meta {:end-column 21, :end-line 117, :column 6, :line 117, :file "/Users/fabian/Code/go/src/github.com/fuzzyants/wikingo/app/resources/public/js/compiled/out/re_com/validate.cljs"}, :file "resources/public/js/compiled/out/re_com/validate.cljs", :line 117, :column 1, :end-line 117, :end-column 21, :test true, :name re-com.validate/justify-options}, extract-arg-data {:protocol-inline nil, :meta {:arglists (quote ([args-desc])), :doc "Package up all the relevant data for validation purposes from the xxx-args-desc map into a new map", :end-column 23, :end-line 36, :column 7, :line 36, :file "/Users/fabian/Code/go/src/github.com/fuzzyants/wikingo/app/resources/public/js/compiled/out/re_com/validate.cljs"}, :name re-com.validate/extract-arg-data, :variadic false, :file "resources/public/js/compiled/out/re_com/validate.cljs", :end-column 23, :method-params ([args-desc]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 36, :end-line 36, :max-fixed-arity 1, :fn-var true, :arglists (quote ([args-desc])), :doc "Package up all the relevant data for validation purposes from the xxx-args-desc map into a new map", :test true}, align-style? {:protocol-inline nil, :meta {:arglists (quote ([arg])), :end-column 19, :end-line 139, :column 7, :line 139, :file "/Users/fabian/Code/go/src/github.com/fuzzyants/wikingo/app/resources/public/js/compiled/out/re_com/validate.cljs"}, :name re-com.validate/align-style?, :variadic false, :file "resources/public/js/compiled/out/re_com/validate.cljs", :end-column 19, :method-params ([arg]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 139, :end-line 139, :max-fixed-arity 1, :fn-var true, :arglists (quote ([arg])), :test true}, throbber-sizes-list {:meta {:end-column 25, :end-line 163, :column 6, :line 163, :file "/Users/fabian/Code/go/src/github.com/fuzzyants/wikingo/app/resources/public/js/compiled/out/re_com/validate.cljs"}, :file "resources/public/js/compiled/out/re_com/validate.cljs", :line 163, :column 1, :end-line 163, :end-column 25, :test true, :name re-com.validate/throbber-sizes-list}, position? {:protocol-inline nil, :meta {:arglists (quote ([arg])), :end-column 16, :end-line 147, :column 7, :line 147, :file "/Users/fabian/Code/go/src/github.com/fuzzyants/wikingo/app/resources/public/js/compiled/out/re_com/validate.cljs"}, :name re-com.validate/position?, :variadic false, :file "resources/public/js/compiled/out/re_com/validate.cljs", :end-column 16, :method-params ([arg]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 147, :end-line 147, :max-fixed-arity 1, :fn-var true, :arglists (quote ([arg])), :test true}, alert-types-list {:meta {:end-column 22, :end-line 161, :column 6, :line 161, :file "/Users/fabian/Code/go/src/github.com/fuzzyants/wikingo/app/resources/public/js/compiled/out/re_com/validate.cljs"}, :file "resources/public/js/compiled/out/re_com/validate.cljs", :line 161, :column 1, :end-line 161, :end-column 22, :test true, :name re-com.validate/alert-types-list}, throbber-size? {:protocol-inline nil, :meta {:arglists (quote ([arg])), :end-column 21, :end-line 143, :column 7, :line 143, :file "/Users/fabian/Code/go/src/github.com/fuzzyants/wikingo/app/resources/public/js/compiled/out/re_com/validate.cljs"}, :name re-com.validate/throbber-size?, :variadic false, :file "resources/public/js/compiled/out/re_com/validate.cljs", :end-column 21, :method-params ([arg]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 143, :end-line 143, :max-fixed-arity 1, :fn-var true, :arglists (quote ([arg])), :test true}, make-code-list {:protocol-inline nil, :meta {:arglists (quote ([codes])), :doc "Given a vector or list of codes, create a [:span] hiccup vector containing a comma separated list of the codes", :end-column 21, :end-line 153, :column 7, :line 153, :file "/Users/fabian/Code/go/src/github.com/fuzzyants/wikingo/app/resources/public/js/compiled/out/re_com/validate.cljs"}, :name re-com.validate/make-code-list, :variadic false, :file "resources/public/js/compiled/out/re_com/validate.cljs", :end-column 21, :method-params ([codes]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 153, :end-line 153, :max-fixed-arity 1, :fn-var true, :arglists (quote ([codes])), :doc "Given a vector or list of codes, create a [:span] hiccup vector containing a comma separated list of the codes", :test true}, popover-status-types-list {:meta {:end-column 31, :end-line 165, :column 6, :line 165, :file "/Users/fabian/Code/go/src/github.com/fuzzyants/wikingo/app/resources/public/js/compiled/out/re_com/validate.cljs"}, :file "resources/public/js/compiled/out/re_com/validate.cljs", :line 165, :column 1, :end-line 165, :end-column 31, :test true, :name re-com.validate/popover-status-types-list}, log-warning {:protocol-inline nil, :meta {:top-fn {:variadic true, :max-fixed-arity 0, :method-params [(args)], :arglists [[& args]], :arglists-meta (nil)}, :arglists (quote ([& args])), :doc "Sends a message to the DeV Tools console as an warning. Returns true to indicate 'not and error' condition", :end-column 18, :end-line 24, :column 7, :line 24, :file "/Users/fabian/Code/go/src/github.com/fuzzyants/wikingo/app/resources/public/js/compiled/out/re_com/validate.cljs"}, :name re-com.validate/log-warning, :variadic true, :file "resources/public/js/compiled/out/re_com/validate.cljs", :end-column 18, :top-fn {:variadic true, :max-fixed-arity 0, :method-params [(args)], :arglists [[& args]], :arglists-meta (nil)}, :method-params [(args)], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 24, :end-line 24, :max-fixed-arity 0, :fn-var true, :arglists [[& args]], :doc "Sends a message to the DeV Tools console as an warning. Returns true to indicate 'not and error' condition", :test true}, extension-attribute? {:protocol-inline nil, :meta {:arglists (quote ([attr])), :doc "Returns truthy if the attribute name is an extension attribute, that is data-* or aria-*, otherwise falsey.", :end-column 27, :end-line 270, :column 7, :line 270, :file "/Users/fabian/Code/go/src/github.com/fuzzyants/wikingo/app/resources/public/js/compiled/out/re_com/validate.cljs"}, :name re-com.validate/extension-attribute?, :variadic false, :file "resources/public/js/compiled/out/re_com/validate.cljs", :end-column 27, :method-params ([attr]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 270, :end-line 270, :max-fixed-arity 1, :fn-var true, :arglists (quote ([attr])), :doc "Returns truthy if the attribute name is an extension attribute, that is data-* or aria-*, otherwise falsey.", :test true}, scroll-options {:meta {:end-column 20, :end-line 119, :column 6, :line 119, :file "/Users/fabian/Code/go/src/github.com/fuzzyants/wikingo/app/resources/public/js/compiled/out/re_com/validate.cljs"}, :file "resources/public/js/compiled/out/re_com/validate.cljs", :line 119, :column 1, :end-line 119, :end-column 20, :test true, :name re-com.validate/scroll-options}, extension-attrs {:meta {:end-column 21, :end-line 197, :column 6, :line 197, :file "/Users/fabian/Code/go/src/github.com/fuzzyants/wikingo/app/resources/public/js/compiled/out/re_com/validate.cljs"}, :file "resources/public/js/compiled/out/re_com/validate.cljs", :line 197, :column 1, :end-line 197, :end-column 21, :test true, :name re-com.validate/extension-attrs}, justify-style? {:protocol-inline nil, :meta {:arglists (quote ([arg])), :end-column 21, :end-line 138, :column 7, :line 138, :file "/Users/fabian/Code/go/src/github.com/fuzzyants/wikingo/app/resources/public/js/compiled/out/re_com/validate.cljs"}, :name re-com.validate/justify-style?, :variadic false, :file "resources/public/js/compiled/out/re_com/validate.cljs", :end-column 21, :method-params ([arg]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 138, :end-line 138, :max-fixed-arity 1, :fn-var true, :arglists (quote ([arg])), :test true}, scroll-options-list {:meta {:end-column 25, :end-line 160, :column 6, :line 160, :file "/Users/fabian/Code/go/src/github.com/fuzzyants/wikingo/app/resources/public/js/compiled/out/re_com/validate.cljs"}, :file "resources/public/js/compiled/out/re_com/validate.cljs", :line 160, :column 1, :end-line 160, :end-column 25, :test true, :name re-com.validate/scroll-options-list}, title-level-type? {:protocol-inline nil, :meta {:arglists (quote ([arg])), :end-column 24, :end-line 146, :column 7, :line 146, :file "/Users/fabian/Code/go/src/github.com/fuzzyants/wikingo/app/resources/public/js/compiled/out/re_com/validate.cljs"}, :name re-com.validate/title-level-type?, :variadic false, :file "resources/public/js/compiled/out/re_com/validate.cljs", :end-column 24, :method-params ([arg]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 146, :end-line 146, :max-fixed-arity 1, :fn-var true, :arglists (quote ([arg])), :test true}, popover-status-type? {:protocol-inline nil, :meta {:arglists (quote ([arg])), :end-column 27, :end-line 145, :column 7, :line 145, :file "/Users/fabian/Code/go/src/github.com/fuzzyants/wikingo/app/resources/public/js/compiled/out/re_com/validate.cljs"}, :name re-com.validate/popover-status-type?, :variadic false, :file "resources/public/js/compiled/out/re_com/validate.cljs", :end-column 27, :method-params ([arg]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 145, :end-line 145, :max-fixed-arity 1, :fn-var true, :arglists (quote ([arg])), :test true}, css-styles {:meta {:end-column 16, :end-line 201, :column 6, :line 201, :file "/Users/fabian/Code/go/src/github.com/fuzzyants/wikingo/app/resources/public/js/compiled/out/re_com/validate.cljs"}, :file "resources/public/js/compiled/out/re_com/validate.cljs", :line 201, :column 1, :end-line 201, :end-column 16, :test true, :name re-com.validate/css-styles}, title-levels {:meta {:end-column 18, :end-line 125, :column 6, :line 125, :file "/Users/fabian/Code/go/src/github.com/fuzzyants/wikingo/app/resources/public/js/compiled/out/re_com/validate.cljs"}, :file "resources/public/js/compiled/out/re_com/validate.cljs", :line 125, :column 1, :end-line 125, :end-column 18, :test true, :name re-com.validate/title-levels}, regex? {:protocol-inline nil, :meta {:arglists (quote ([arg])), :doc "Returns true if the passed argument is a valid regular expression, otherwise false/error", :end-column 13, :end-line 313, :column 7, :line 313, :file "/Users/fabian/Code/go/src/github.com/fuzzyants/wikingo/app/resources/public/js/compiled/out/re_com/validate.cljs"}, :name re-com.validate/regex?, :variadic false, :file "resources/public/js/compiled/out/re_com/validate.cljs", :end-column 13, :method-params ([arg]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 313, :end-line 313, :max-fixed-arity 1, :fn-var true, :arglists (quote ([arg])), :doc "Returns true if the passed argument is a valid regular expression, otherwise false/error", :test true}, css-style? {:protocol-inline nil, :meta {:arglists (quote ([arg])), :doc "Returns true if the passed argument is a valid CSS style.\n   Otherwise returns a warning map", :end-column 17, :end-line 257, :column 7, :line 257, :file "/Users/fabian/Code/go/src/github.com/fuzzyants/wikingo/app/resources/public/js/compiled/out/re_com/validate.cljs"}, :name re-com.validate/css-style?, :variadic false, :file "resources/public/js/compiled/out/re_com/validate.cljs", :end-column 17, :method-params ([arg]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 257, :end-line 257, :max-fixed-arity 1, :fn-var true, :arglists (quote ([arg])), :doc "Returns true if the passed argument is a valid CSS style.\n   Otherwise returns a warning map", :test true}, html-attrs {:meta {:end-column 16, :end-line 177, :column 6, :line 177, :file "/Users/fabian/Code/go/src/github.com/fuzzyants/wikingo/app/resources/public/js/compiled/out/re_com/validate.cljs"}, :file "resources/public/js/compiled/out/re_com/validate.cljs", :line 177, :column 1, :end-line 177, :end-column 16, :test true, :name re-com.validate/html-attrs}, position-options-list {:meta {:end-column 27, :end-line 167, :column 6, :line 167, :file "/Users/fabian/Code/go/src/github.com/fuzzyants/wikingo/app/resources/public/js/compiled/out/re_com/validate.cljs"}, :file "resources/public/js/compiled/out/re_com/validate.cljs", :line 167, :column 1, :end-line 167, :end-column 27, :test true, :name re-com.validate/position-options-list}, validate-arg-against-set {:protocol-inline nil, :meta {:arglists (quote ([arg arg-name valid-set])), :doc "Validates the passed argument against the expected set", :end-column 31, :end-line 131, :column 7, :line 131, :file "/Users/fabian/Code/go/src/github.com/fuzzyants/wikingo/app/resources/public/js/compiled/out/re_com/validate.cljs"}, :name re-com.validate/validate-arg-against-set, :variadic false, :file "resources/public/js/compiled/out/re_com/validate.cljs", :end-column 31, :method-params ([arg arg-name valid-set]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 131, :end-line 131, :max-fixed-arity 3, :fn-var true, :arglists (quote ([arg arg-name valid-set])), :doc "Validates the passed argument against the expected set", :test true}, position-options {:meta {:end-column 22, :end-line 126, :column 6, :line 126, :file "/Users/fabian/Code/go/src/github.com/fuzzyants/wikingo/app/resources/public/js/compiled/out/re_com/validate.cljs"}, :file "resources/public/js/compiled/out/re_com/validate.cljs", :line 126, :column 1, :end-line 126, :end-column 22, :test true, :name re-com.validate/position-options}, justify-options-list {:meta {:end-column 26, :end-line 158, :column 6, :line 158, :file "/Users/fabian/Code/go/src/github.com/fuzzyants/wikingo/app/resources/public/js/compiled/out/re_com/validate.cljs"}, :file "resources/public/js/compiled/out/re_com/validate.cljs", :line 158, :column 1, :end-line 158, :end-column 26, :test true, :name re-com.validate/justify-options-list}, required-args-passed? {:protocol-inline nil, :meta {:arglists (quote ([required-args passed-args])), :doc "returns true if all the required args are supplied. Otherwise log the error and return false", :end-column 28, :end-line 59, :column 7, :line 59, :file "/Users/fabian/Code/go/src/github.com/fuzzyants/wikingo/app/resources/public/js/compiled/out/re_com/validate.cljs"}, :name re-com.validate/required-args-passed?, :variadic false, :file "resources/public/js/compiled/out/re_com/validate.cljs", :end-column 28, :method-params ([required-args passed-args]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 59, :end-line 59, :max-fixed-arity 2, :fn-var true, :arglists (quote ([required-args passed-args])), :doc "returns true if all the required args are supplied. Otherwise log the error and return false", :test true}, popover-status-types {:meta {:end-column 26, :end-line 124, :column 6, :line 124, :file "/Users/fabian/Code/go/src/github.com/fuzzyants/wikingo/app/resources/public/js/compiled/out/re_com/validate.cljs"}, :file "resources/public/js/compiled/out/re_com/validate.cljs", :line 124, :column 1, :end-line 124, :end-column 26, :test true, :name re-com.validate/popover-status-types}, invalid-html-attrs {:protocol-inline nil, :meta {:arglists (quote ([attrs])), :doc "Returns the subset of HTML attributes contained in the passed argument that are not valid HTML attributes.", :end-column 25, :end-line 278, :column 7, :line 278, :file "/Users/fabian/Code/go/src/github.com/fuzzyants/wikingo/app/resources/public/js/compiled/out/re_com/validate.cljs"}, :name re-com.validate/invalid-html-attrs, :variadic false, :file "resources/public/js/compiled/out/re_com/validate.cljs", :end-column 25, :method-params ([attrs]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 278, :end-line 278, :max-fixed-arity 1, :fn-var true, :arglists (quote ([attrs])), :doc "Returns the subset of HTML attributes contained in the passed argument that are not valid HTML attributes.", :test true}, alert-types {:meta {:end-column 17, :end-line 120, :column 6, :line 120, :file "/Users/fabian/Code/go/src/github.com/fuzzyants/wikingo/app/resources/public/js/compiled/out/re_com/validate.cljs"}, :file "resources/public/js/compiled/out/re_com/validate.cljs", :line 120, :column 1, :end-line 120, :end-column 17, :test true, :name re-com.validate/alert-types}, string-or-hiccup? {:protocol-inline nil, :meta {:arglists (quote ([arg])), :doc "Returns true if the passed argument is either valid hiccup or a string, otherwise false/error", :end-column 24, :end-line 240, :column 7, :line 240, :file "/Users/fabian/Code/go/src/github.com/fuzzyants/wikingo/app/resources/public/js/compiled/out/re_com/validate.cljs"}, :name re-com.validate/string-or-hiccup?, :variadic false, :file "resources/public/js/compiled/out/re_com/validate.cljs", :end-column 24, :method-params ([arg]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 240, :end-line 240, :max-fixed-arity 1, :fn-var true, :arglists (quote ([arg])), :doc "Returns true if the passed argument is either valid hiccup or a string, otherwise false/error", :test true}, log-error {:protocol-inline nil, :meta {:top-fn {:variadic true, :max-fixed-arity 0, :method-params [(args)], :arglists [[& args]], :arglists-meta (nil)}, :arglists (quote ([& args])), :doc "Sends a message to the DeV Tools console as an error. Returns false to indicate 'error' condition", :end-column 16, :end-line 18, :column 7, :line 18, :file "/Users/fabian/Code/go/src/github.com/fuzzyants/wikingo/app/resources/public/js/compiled/out/re_com/validate.cljs"}, :name re-com.validate/log-error, :variadic true, :file "resources/public/js/compiled/out/re_com/validate.cljs", :end-column 16, :top-fn {:variadic true, :max-fixed-arity 0, :method-params [(args)], :arglists [[& args]], :arglists-meta (nil)}, :method-params [(args)], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 18, :end-line 18, :max-fixed-arity 0, :fn-var true, :arglists [[& args]], :doc "Sends a message to the DeV Tools console as an error. Returns false to indicate 'error' condition", :test true}, vector-of-maps? {:protocol-inline nil, :meta {:arglists (quote ([arg])), :doc "Returns true if the passed argument is a vector of maps (either directly or contained in an atom), otherwise false/error\n   Notes:\n    - actually it also accepts a list of maps (should we rename this? Potential long/ugly names: sequential-of-maps?, vector-or-list-of-maps?)\n    - vector/list can be empty\n    - only checks the first element in the vector/list", :end-column 22, :end-line 245, :column 7, :line 245, :file "/Users/fabian/Code/go/src/github.com/fuzzyants/wikingo/app/resources/public/js/compiled/out/re_com/validate.cljs"}, :name re-com.validate/vector-of-maps?, :variadic false, :file "resources/public/js/compiled/out/re_com/validate.cljs", :end-column 22, :method-params ([arg]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 245, :end-line 245, :max-fixed-arity 1, :fn-var true, :arglists (quote ([arg])), :doc "Returns true if the passed argument is a vector of maps (either directly or contained in an atom), otherwise false/error\n   Notes:\n    - actually it also accepts a list of maps (should we rename this? Potential long/ugly names: sequential-of-maps?, vector-or-list-of-maps?)\n    - vector/list can be empty\n    - only checks the first element in the vector/list", :test true}, hash-map-with-name-keys {:protocol-inline nil, :meta {:arglists (quote ([v])), :end-column 30, :end-line 31, :column 7, :line 31, :file "/Users/fabian/Code/go/src/github.com/fuzzyants/wikingo/app/resources/public/js/compiled/out/re_com/validate.cljs"}, :name re-com.validate/hash-map-with-name-keys, :variadic false, :file "resources/public/js/compiled/out/re_com/validate.cljs", :end-column 30, :method-params ([v]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 31, :end-line 31, :max-fixed-arity 1, :fn-var true, :arglists (quote ([v])), :test true}, arg-names-valid? {:protocol-inline nil, :meta {:arglists (quote ([defined-args passed-args])), :doc "returns true if every passed-args is value. Otherwise log the problem and return false", :end-column 23, :end-line 52, :column 7, :line 52, :file "/Users/fabian/Code/go/src/github.com/fuzzyants/wikingo/app/resources/public/js/compiled/out/re_com/validate.cljs"}, :name re-com.validate/arg-names-valid?, :variadic false, :file "resources/public/js/compiled/out/re_com/validate.cljs", :end-column 23, :method-params ([defined-args passed-args]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 52, :end-line 52, :max-fixed-arity 2, :fn-var true, :arglists (quote ([defined-args passed-args])), :doc "returns true if every passed-args is value. Otherwise log the problem and return false", :test true}, input-status-type? {:protocol-inline nil, :meta {:arglists (quote ([arg])), :end-column 25, :end-line 144, :column 7, :line 144, :file "/Users/fabian/Code/go/src/github.com/fuzzyants/wikingo/app/resources/public/js/compiled/out/re_com/validate.cljs"}, :name re-com.validate/input-status-type?, :variadic false, :file "resources/public/js/compiled/out/re_com/validate.cljs", :end-column 25, :method-params ([arg]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 144, :end-line 144, :max-fixed-arity 1, :fn-var true, :arglists (quote ([arg])), :test true}, validate-args {:protocol-inline nil, :meta {:top-fn {:variadic true, :max-fixed-arity 2, :method-params [(arg-defs passed-args component-name)], :arglists [[arg-defs passed-args & component-name]], :arglists-meta (nil)}, :arglists (quote ([arg-defs passed-args & component-name])), :doc "Calls three validation tests:\n    - Are arg names valid?\n    - Have all required args been passed?\n    - Specific valiadation function calls to check arg values if specified\n   If they all pass, returns true.\n   Normally used for a call to the {:pre...} at the beginning of a function", :end-column 20, :end-line 97, :column 7, :line 97, :file "/Users/fabian/Code/go/src/github.com/fuzzyants/wikingo/app/resources/public/js/compiled/out/re_com/validate.cljs"}, :name re-com.validate/validate-args, :variadic true, :file "resources/public/js/compiled/out/re_com/validate.cljs", :end-column 20, :top-fn {:variadic true, :max-fixed-arity 2, :method-params [(arg-defs passed-args component-name)], :arglists [[arg-defs passed-args & component-name]], :arglists-meta (nil)}, :method-params [(arg-defs passed-args component-name)], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 97, :end-line 97, :max-fixed-arity 2, :fn-var true, :arglists [[arg-defs passed-args & component-name]], :doc "Calls three validation tests:\n    - Are arg names valid?\n    - Have all required args been passed?\n    - Specific valiadation function calls to check arg values if specified\n   If they all pass, returns true.\n   Normally used for a call to the {:pre...} at the beginning of a function", :test true}, number-or-string? {:protocol-inline nil, :meta {:arglists (quote ([arg])), :doc "Returns true if the passed argument is a number or a string, otherwise false/error", :end-column 24, :end-line 319, :column 7, :line 319, :file "/Users/fabian/Code/go/src/github.com/fuzzyants/wikingo/app/resources/public/js/compiled/out/re_com/validate.cljs"}, :name re-com.validate/number-or-string?, :variadic false, :file "resources/public/js/compiled/out/re_com/validate.cljs", :end-column 24, :method-params ([arg]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 319, :end-line 319, :max-fixed-arity 1, :fn-var true, :arglists (quote ([arg])), :doc "Returns true if the passed argument is a number or a string, otherwise false/error", :test true}, align-options {:meta {:end-column 19, :end-line 118, :column 6, :line 118, :file "/Users/fabian/Code/go/src/github.com/fuzzyants/wikingo/app/resources/public/js/compiled/out/re_com/validate.cljs"}, :file "resources/public/js/compiled/out/re_com/validate.cljs", :line 118, :column 1, :end-line 118, :end-column 19, :test true, :name re-com.validate/align-options}, goog-date? {:protocol-inline nil, :meta {:arglists (quote ([arg])), :doc "Returns true if the passed argument is a valid goog.date.UtcDateTime, otherwise false/error", :end-column 17, :end-line 307, :column 7, :line 307, :file "/Users/fabian/Code/go/src/github.com/fuzzyants/wikingo/app/resources/public/js/compiled/out/re_com/validate.cljs"}, :name re-com.validate/goog-date?, :variadic false, :file "resources/public/js/compiled/out/re_com/validate.cljs", :end-column 17, :method-params ([arg]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 307, :end-line 307, :max-fixed-arity 1, :fn-var true, :arglists (quote ([arg])), :doc "Returns true if the passed argument is a valid goog.date.UtcDateTime, otherwise false/error", :test true}, button-sizes-list {:meta {:end-column 23, :end-line 162, :column 6, :line 162, :file "/Users/fabian/Code/go/src/github.com/fuzzyants/wikingo/app/resources/public/js/compiled/out/re_com/validate.cljs"}, :file "resources/public/js/compiled/out/re_com/validate.cljs", :line 162, :column 1, :end-line 162, :end-column 23, :test true, :name re-com.validate/button-sizes-list}, input-status-types-list {:meta {:end-column 29, :end-line 164, :column 6, :line 164, :file "/Users/fabian/Code/go/src/github.com/fuzzyants/wikingo/app/resources/public/js/compiled/out/re_com/validate.cljs"}, :file "resources/public/js/compiled/out/re_com/validate.cljs", :line 164, :column 1, :end-line 164, :end-column 29, :test true, :name re-com.validate/input-status-types-list}, set-or-atom? {:protocol-inline nil, :meta {:arglists (quote ([arg])), :doc "Returns true if the passed argument is a set (or a set within an atom), otherwise false/error", :end-column 19, :end-line 330, :column 7, :line 330, :file "/Users/fabian/Code/go/src/github.com/fuzzyants/wikingo/app/resources/public/js/compiled/out/re_com/validate.cljs"}, :name re-com.validate/set-or-atom?, :variadic false, :file "resources/public/js/compiled/out/re_com/validate.cljs", :end-column 19, :method-params ([arg]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 330, :end-line 330, :max-fixed-arity 1, :fn-var true, :arglists (quote ([arg])), :doc "Returns true if the passed argument is a set (or a set within an atom), otherwise false/error", :test true}, button-sizes {:meta {:end-column 18, :end-line 121, :column 6, :line 121, :file "/Users/fabian/Code/go/src/github.com/fuzzyants/wikingo/app/resources/public/js/compiled/out/re_com/validate.cljs"}, :file "resources/public/js/compiled/out/re_com/validate.cljs", :line 121, :column 1, :end-line 121, :end-column 18, :test true, :name re-com.validate/button-sizes}, title-levels-list {:meta {:end-column 23, :end-line 166, :column 6, :line 166, :file "/Users/fabian/Code/go/src/github.com/fuzzyants/wikingo/app/resources/public/js/compiled/out/re_com/validate.cljs"}, :file "resources/public/js/compiled/out/re_com/validate.cljs", :line 166, :column 1, :end-line 166, :end-column 23, :test true, :name re-com.validate/title-levels-list}, left-string {:protocol-inline nil, :meta {:arglists (quote ([obj max-len])), :doc "Converts obj to a string and truncates it to max-len chars if necessary.\n   When truncation is necessary, adds an elipsis to the end", :end-column 18, :end-line 12, :column 7, :line 12, :file "/Users/fabian/Code/go/src/github.com/fuzzyants/wikingo/app/resources/public/js/compiled/out/re_com/validate.cljs"}, :name re-com.validate/left-string, :variadic false, :file "resources/public/js/compiled/out/re_com/validate.cljs", :end-column 18, :method-params ([obj max-len]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 12, :end-line 12, :max-fixed-arity 2, :fn-var true, :arglists (quote ([obj max-len])), :doc "Converts obj to a string and truncates it to max-len chars if necessary.\n   When truncation is necessary, adds an elipsis to the end", :test true}, button-size? {:protocol-inline nil, :meta {:arglists (quote ([arg])), :end-column 19, :end-line 142, :column 7, :line 142, :file "/Users/fabian/Code/go/src/github.com/fuzzyants/wikingo/app/resources/public/js/compiled/out/re_com/validate.cljs"}, :name re-com.validate/button-size?, :variadic false, :file "resources/public/js/compiled/out/re_com/validate.cljs", :end-column 19, :method-params ([arg]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 142, :end-line 142, :max-fixed-arity 1, :fn-var true, :arglists (quote ([arg])), :test true}, align-options-list {:meta {:end-column 24, :end-line 159, :column 6, :line 159, :file "/Users/fabian/Code/go/src/github.com/fuzzyants/wikingo/app/resources/public/js/compiled/out/re_com/validate.cljs"}, :file "resources/public/js/compiled/out/re_com/validate.cljs", :line 159, :column 1, :end-line 159, :end-column 24, :test true, :name re-com.validate/align-options-list}}, :require-macros nil, :cljs.analyzer/constants {:order [:name :arg-names :required-args :validated-args :required :validate-fn :type :status :warning :message :else :start :end :center :between :around :baseline :stretch :auto :off :on :spill :none :info :danger :regular :smaller :larger :small :large :error :level1 :level2 :level3 :level4 :above-left :above-center :above-right :below-left :below-center :below-right :left-above :left-center :left-below :right-above :right-center :right-below :span :code :y :role :rel :text-anchor :on-drag-exit :spread-method :auto-complete :open :tab-index :stroke-dasharray :async :min :gradient-transform :radio-group :sizes :rx :r :on-touch-cancel :on-key-press :max-length :stroke :stop-color :on-mouse-enter :transform :selected :dx :date-time :preserve-aspect-ratio :on-scroll :dir :muted :seamless :placeholder :disabled :font-size :alt :cell-padding :offset :frame-border :content-editable :on-mouse-out :coords :method :content :margin-width :on-focus :access-key :stroke-opacity :form-action :fill :value :href-lang :y1 :width :on-drop :dy :on-blur :defer :form-target :on-wheel :controls :manifest :src :points :view-box :form-no-validate :icon :on-drag :multiple :scope :sandbox :on-mouse-down :on-click :stop-opacity :size :use-map :title :allow-full-screen :loop :on-paste :html-for :lang :stroke-linecap :src-set :rows :on-key-up :on-cut :enc-type :http-equiv :cols :scrolling :preload :on-drag-leave :marker-start :poster :on-drag-start :draggable :auto-play :stroke-width :list :hidden :max :media-group :opacity :on-double-click :cx :label :id :accept-charset :wmode :no-validate :cy :char-set :checked :context-menu :on-drag-enter :on-mouse-move :shape :cross-origin :col-span :on-copy :auto-focus :on-touch-move :src-doc :on-submit :d :action :on-mouse-up :cell-spacing :on-mouse-leave :spell-check :class-name :fy :on-drag-over :on-mouse-over :x :pattern-content-units :x1 :form :target :read-only :on-input :version :y2 :form-method :on-change :on-touch-start :allow-transparency :on-key-down :marker-mid :fx :margin-height :download :step :media :x2 :ry :gradient-units :on-touch-end :href :fill-opacity :pattern-units :font-family :form-enc-type :height :marker-end :pattern :row-span :accept :on-drag-end :data :aria :transform-style :border-image :mm :border-image-slice :border-style :line-height :text-rendering :min-width :font-style :block-size :inline-size :animation-delay :vmin :transition-delay :mask :image-rendering :image-orientation :border-top-style :box-decoration-break :mask-type :box-sizing :font-variant-numeric :font-stretch :text-decoration-style :-webkit-flex-basis :border-block-end :align-items :inherit :padding-inline-end :object-fit :text-overflow :will-change :outline-offset :align-content :grid-column-end :pt :box-shadow :clip :padding-block-start :max-height :offset-block-end :isolation :border-right :text-transform :border-inline-end-style :border-bottom-style :grid-template :animation :column-count :-webkit-align-content :color :list-style-position :margin-inline-end :-webkit-align-self :text-align :vertical-align :tab-size :min-height :font-language-override :page-break-inside :ruby-merge :grid-auto-position :border-left-width :-ms-user-select :bottom :line-break :outline-style :white-space :transition :animation-direction :top :font-variant :writing-mode :font-weight :offset-inline-end :-webkit-flex-grow :max-block-size :float :border-right-style :border-top-right-radius :font-variant-ligatures :overflow :grid :columns :shape-outside :-moz-user-select :padding-block-end :backface-visibility :mix-blend-mode :min-inline-size :hyphens :break-inside :border-block-end-width :margin-left :text-decoration-line :border-left-color :list-style :-webkit-flex-flow :-webkit-flex-wrap :margin-block-end :list-style-type :-webkit-user-select :background-color :overflow-wrap :word-wrap :margin-top :-webkit-flex :flex-grow :-webkit-justify-content :px :background :hz :page-break-after :background-blend-mode :rem :em :font-feature-settings :dppx :grid-auto-rows :background-attachment :flex-wrap :grid-template-rows :grid-row-start :dpcm :grid-auto-flow :cursor :border-right-width :border-inline-start-width :flex :border-inline-end-color :ruby-position :pc :text-orientation :border-block-start-style :list-style-image :max-width :border-bottom-left-radius :text-combine-upright :vh :ime-mode :all :border-image-source :outline-width :resize :border-inline-end :border-block-end-style :perspective :border-left :border-top-left-radius :word-spacing :s :flex-shrink :animation-timing-function :padding-right :ch :border-bottom-width :font :font-variant-alternates :column-gap :border-block-start-width :vw :border-collapse :deg :-webkit-flex-shrink :orphans :border-right-color :background-clip :background-image :dpi :unicode-range :clip-path :cm :turn :ruby-align :text-align-last :grid-column-start :border-block-start-color :border-image-repeat :grid-row :widows :border-width :filter :quotes :offset-block-start :offset-inline-start :text-indent :z-index :margin-block-start :padding-top :border-left-style :empty-cells :padding-left :ex :font-variant-caps :text-decoration-color :word-break :border-top-width :background-origin :column-width :min-block-size :border-spacing :page-break-before :padding :font-kerning :grid-area :border-inline-start :border-top-color :border-image-outset :font-variant-position :justify-content :max-inline-size :transition-timing-function :overflow-x :outline :animation-duration :initial :border-block-start :text-underline-position :border-inline-start-style :animation-play-state :transform-origin :object-position :marks :perspective-origin :right :text-shadow :border-color :text-decoration :transition-property :shape-margin :display :image-resolution :position :order :grid-template-areas :vmax :shape-image-threshold :border-inline-end-width :column-fill :-webkit-order :letter-spacing :column-span :background-repeat :padding-bottom :break-before :unicode-bidi :margin-inline-start :align-self :margin-right :grid-row-end :background-position :scroll-behavior :table-layout :border-inline-start-color :grid-template-columns :border :column-rule-width :border-bottom-color :border-top :column-rule-color :overflow-y :border-radius :ms :pointer-events :flex-basis :caption-side :-webkit-align-items :font-synthesis :touch-action :break-after :font-size-adjust :rad :transition-duration :border-bottom-right-radius :khz :counter-increment :font-variant-east-asian :margin-bottom :outline-color :animation-iteration-count :background-size :visibility :grad :column-rule :animation-fill-mode :direction :user-select :unset :column-rule-style :animation-name :grid-column :grid-auto-columns :flex-direction :-webkit-flex-direction :border-bottom :in :clear :left :padding-inline-start :counter-reset :flex-flow :border-image-width :margin :border-block-end-color :class :style], :seen #{:transform-style :y :border-image :above-left :mm :border-image-slice :role :above-center :rel :border-style :text-anchor :large :line-height :on-drag-exit :text-rendering :min-width :font-style :spread-method :block-size :auto-complete :inline-size :animation-delay :open :vmin :baseline :transition-delay :mask :image-rendering :tab-index :stroke-dasharray :image-orientation :async :border-top-style :box-decoration-break :mask-type :box-sizing :font-variant-numeric :min :font-stretch :gradient-transform :text-decoration-style :-webkit-flex-basis :radio-group :border-block-end :align-items :regular :sizes :inherit :left-center :rx :padding-inline-end :r :object-fit :text-overflow :on-touch-cancel :will-change :on-key-press :outline-offset :max-length :right-below :align-content :stroke :stop-color :grid-column-end :pt :box-shadow :on-mouse-enter :clip :padding-block-start :max-height :offset-block-end :isolation :border-right :text-transform :transform :border-inline-end-style :border-bottom-style :grid-template :selected :animation :dx :date-time :column-count :-webkit-align-content :color :list-style-position :margin-inline-end :preserve-aspect-ratio :-webkit-align-self :on-scroll :text-align :vertical-align :dir :tab-size :min-height :font-language-override :page-break-inside :ruby-merge :grid-auto-position :muted :border-left-width :validated-args :seamless :placeholder :-ms-user-select :bottom :disabled :else :line-break :outline-style :smaller :white-space :font-size :alt :cell-padding :transition :offset :animation-direction :top :level3 :font-variant :writing-mode :font-weight :frame-border :offset-inline-end :-webkit-flex-grow :content-editable :on-mouse-out :coords :method :content :margin-width :max-block-size :on-focus :float :access-key :border-right-style :border-top-right-radius :font-variant-ligatures :overflow :grid :columns :shape-outside :-moz-user-select :name :padding-block-end :required-args :backface-visibility :mix-blend-mode :stroke-opacity :min-inline-size :hyphens :form-action :fill :break-inside :border-block-end-width :margin-left :text-decoration-line :value :left-above :border-left-color :level2 :list-style :-webkit-flex-flow :-webkit-flex-wrap :margin-block-end :list-style-type :-webkit-user-select :background-color :overflow-wrap :word-wrap :href-lang :y1 :margin-top :-webkit-flex :flex-grow :-webkit-justify-content :width :px :start :background :on-drop :dy :hz :page-break-after :below-center :background-blend-mode :on-blur :defer :rem :em :font-feature-settings :dppx :grid-auto-rows :background-attachment :flex-wrap :grid-template-rows :grid-row-start :between :dpcm :grid-auto-flow :cursor :border-right-width :form-target :on-wheel :below-left :type :border-inline-start-width :flex :controls :border-inline-end-color :manifest :ruby-position :src :pc :points :view-box :text-orientation :border-block-start-style :form-no-validate :list-style-image :icon :on-drag :multiple :max-width :scope :border-bottom-left-radius :sandbox :text-combine-upright :vh :ime-mode :all :border-image-source :outline-width :resize :border-inline-end :border-block-end-style :perspective :border-left :border-top-left-radius :word-spacing :s :on-mouse-down :flex-shrink :animation-timing-function :spill :padding-right :on-click :stop-opacity :ch :border-bottom-width :font :size :font-variant-alternates :use-map :title :column-gap :allow-full-screen :level4 :border-block-start-width :vw :border-collapse :deg :-webkit-flex-shrink :orphans :loop :border-right-color :center :background-clip :on-paste :html-for :background-image :small :style :dpi :unicode-range :clip-path :cm :lang :stroke-linecap :src-set :rows :on-key-up :turn :ruby-align :text-align-last :on-cut :grid-column-start :enc-type :border-block-start-color :border-image-repeat :warning :http-equiv :cols :grid-row :widows :scrolling :preload :border-width :on-drag-leave :marker-start :filter :quotes :offset-block-start :right-center :poster :offset-inline-start :danger :text-indent :z-index :aria :on-drag-start :draggable :margin-block-start :padding-top :auto-play :border-left-style :stroke-width :list :empty-cells :padding-left :ex :status :larger :font-variant-caps :text-decoration-color :hidden :max :word-break :border-top-width :background-origin :column-width :min-block-size :media-group :border-spacing :opacity :on-double-click :cx :label :id :accept-charset :page-break-before :class :arg-names :wmode :no-validate :cy :char-set :padding :off :font-kerning :checked :grid-area :border-inline-start :border-top-color :border-image-outset :context-menu :on-drag-enter :right-above :font-variant-position :justify-content :on-mouse-move :shape :cross-origin :max-inline-size :info :transition-timing-function :code :col-span :overflow-x :on-copy :outline :animation-duration :initial :border-block-start :text-underline-position :border-inline-start-style :animation-play-state :transform-origin :auto-focus :on-touch-move :left-below :src-doc :object-position :marks :perspective-origin :right :text-shadow :border-color :text-decoration :transition-property :on-submit :shape-margin :display :image-resolution :position :order :grid-template-areas :vmax :d :validate-fn :action :on-mouse-up :cell-spacing :on-mouse-leave :spell-check :error :on :class-name :shape-image-threshold :fy :on-drag-over :on-mouse-over :border-inline-end-width :column-fill :-webkit-order :letter-spacing :x :pattern-content-units :column-span :x1 :form :background-repeat :padding-bottom :break-before :target :read-only :unicode-bidi :margin-inline-start :align-self :margin-right :end :grid-row-end :on-input :background-position :scroll-behavior :table-layout :version :y2 :border-inline-start-color :form-method :on-change :on-touch-start :grid-template-columns :allow-transparency :border :column-rule-width :border-bottom-color :on-key-down :marker-mid :border-top :column-rule-color :overflow-y :border-radius :ms :pointer-events :flex-basis :caption-side :-webkit-align-items :fx :margin-height :font-synthesis :touch-action :stretch :break-after :font-size-adjust :rad :download :transition-duration :border-bottom-right-radius :khz :counter-increment :below-right :auto :step :font-variant-east-asian :media :margin-bottom :outline-color :x2 :level1 :animation-iteration-count :background-size :visibility :ry :grad :gradient-units :column-rule :on-touch-end :animation-fill-mode :direction :href :fill-opacity :required :user-select :none :unset :column-rule-style :animation-name :above-right :pattern-units :grid-column :font-family :grid-auto-columns :flex-direction :message :-webkit-flex-direction :form-enc-type :height :border-bottom :marker-end :around :in :clear :left :pattern :padding-inline-start :row-span :accept :counter-reset :span :on-drag-end :flex-flow :border-image-width :margin :data :border-block-end-color}}, :doc nil}